# frozen_string_literal: true

module Telnyx
  module Models
    class URLShortenerSettings < Telnyx::Internal::Type::BaseModel
      # @!attribute domain
      #   One of the domains provided by the Telnyx URL shortener service.
      #
      #   @return [String]
      required :domain, String

      # @!attribute prefix
      #   Optional prefix that can be used to identify your brand, and will appear in the
      #   Telnyx generated URLs after the domain name.
      #
      #   @return [String, nil]
      optional :prefix, String

      # @!attribute replace_blacklist_only
      #   Use the link replacement tool only for links that are specifically blacklisted
      #   by Telnyx.
      #
      #   @return [Boolean, nil]
      optional :replace_blacklist_only, Telnyx::Internal::Type::Boolean

      # @!attribute send_webhooks
      #   Receive webhooks for when your replaced links are clicked. Webhooks are sent to
      #   the webhooks on the messaging profile.
      #
      #   @return [Boolean, nil]
      optional :send_webhooks, Telnyx::Internal::Type::Boolean

      # @!method initialize(domain:, prefix: nil, replace_blacklist_only: nil, send_webhooks: nil)
      #   Some parameter documentations has been truncated, see
      #   {Telnyx::Models::URLShortenerSettings} for more details.
      #
      #   The URL shortener feature allows automatic replacement of URLs that were
      #   generated using a public URL shortener service. Some examples include bit.do,
      #   bit.ly, goo.gl, ht.ly, is.gd, ow.ly, rebrand.ly, t.co, tiny.cc, and tinyurl.com.
      #   Such URLs are replaced with with links generated by Telnyx. The use of custom
      #   links can improve branding and message deliverability.
      #
      #   To disable this feature, set the object field to `null`.
      #
      #   @param domain [String] One of the domains provided by the Telnyx URL shortener service.
      #
      #   @param prefix [String] Optional prefix that can be used to identify your brand, and will appear in the
      #
      #   @param replace_blacklist_only [Boolean] Use the link replacement tool only for links that are specifically blacklisted b
      #
      #   @param send_webhooks [Boolean] Receive webhooks for when your replaced links are clicked. Webhooks are sent to
    end
  end
end
