# frozen_string_literal: true

module Telnyx
  module Resources
    class CampaignBuilder
      # @return [Telnyx::Resources::CampaignBuilder::Brand]
      attr_reader :brand

      # Some parameter documentations has been truncated, see
      # {Telnyx::Models::CampaignBuilderCreateParams} for more details.
      #
      # Before creating a campaign, use the
      # [Qualify By Usecase endpoint](https://developers.telnyx.com/api/messaging/10dlc/get-usecase-qualification)
      # to ensure that the brand you want to assign a new campaign to is qualified for
      # the desired use case of that campaign. **Please note:** After campaign creation,
      # you'll only be able to edit the campaign's sample messages. Creating a campaign
      # will entail an upfront, non-refundable three month's cost that will depend on
      # the campaign's use case
      # ([see 10DLC Costs section for details](https://developers.telnyx.com/docs/messaging/10dlc/concepts#10dlc-costs)).
      #
      # @overload create(brand_id:, description:, usecase:, age_gated: nil, auto_renewal: nil, direct_lending: nil, embedded_link: nil, embedded_link_sample: nil, embedded_phone: nil, help_keywords: nil, help_message: nil, message_flow: nil, mno_ids: nil, number_pool: nil, optin_keywords: nil, optin_message: nil, optout_keywords: nil, optout_message: nil, privacy_policy_link: nil, reference_id: nil, reseller_id: nil, sample1: nil, sample2: nil, sample3: nil, sample4: nil, sample5: nil, subscriber_help: nil, subscriber_optin: nil, subscriber_optout: nil, sub_usecases: nil, tag: nil, terms_and_conditions: nil, terms_and_conditions_link: nil, webhook_failover_url: nil, webhook_url: nil, request_options: {})
      #
      # @param brand_id [String] Alphanumeric identifier of the brand associated with this campaign.
      #
      # @param description [String] Summary description of this campaign.
      #
      # @param usecase [String] Campaign usecase. Must be of defined valid types. Use `/registry/enum/usecase` o
      #
      # @param age_gated [Boolean] Age gated message content in campaign.
      #
      # @param auto_renewal [Boolean] Campaign subscription auto-renewal option. If set to true, then campaign will au
      #
      # @param direct_lending [Boolean] Direct lending or loan arrangement
      #
      # @param embedded_link [Boolean] Does message generated by the campaign include URL link in SMS?
      #
      # @param embedded_link_sample [String] Sample of an embedded link that will be sent to subscribers.
      #
      # @param embedded_phone [Boolean] Does message generated by the campaign include phone number in SMS?
      #
      # @param help_keywords [String] Subscriber help keywords. Multiple keywords are comma separated without space.
      #
      # @param help_message [String] Help message of the campaign.
      #
      # @param message_flow [String] Message flow description.
      #
      # @param mno_ids [Array<Integer>] Submit campaign to given list of MNOs by MNO's network ID. Default is all MNOs i
      #
      # @param number_pool [Boolean] Does campaign utilize pool of phone numbers?
      #
      # @param optin_keywords [String] Subscriber opt-in keywords. Multiple keywords are comma separated without space.
      #
      # @param optin_message [String] Subscriber opt-in message.
      #
      # @param optout_keywords [String] Subscriber opt-out keywords. Multiple keywords are comma separated without space
      #
      # @param optout_message [String] Subscriber opt-out message.
      #
      # @param privacy_policy_link [String] Link to the campaign's privacy policy.
      #
      # @param reference_id [String] Caller supplied campaign reference ID. If supplied, the value must be unique acr
      #
      # @param reseller_id [String] Alphanumeric identifier of the reseller that you want to associate with this cam
      #
      # @param sample1 [String] Message sample. Some campaign tiers require 1 or more message samples.
      #
      # @param sample2 [String] Message sample. Some campaign tiers require 2 or more message samples.
      #
      # @param sample3 [String] Message sample. Some campaign tiers require 3 or more message samples.
      #
      # @param sample4 [String] Message sample. Some campaign tiers require 4 or more message samples.
      #
      # @param sample5 [String] Message sample. Some campaign tiers require 5 or more message samples.
      #
      # @param subscriber_help [Boolean] Does campaign responds to help keyword(s)?
      #
      # @param subscriber_optin [Boolean] Does campaign require subscriber to opt-in before SMS is sent to subscriber?
      #
      # @param subscriber_optout [Boolean] Does campaign support subscriber opt-out keyword(s)?
      #
      # @param sub_usecases [Array<String>] Campaign sub-usecases. Must be of defined valid sub-usecase types. Use `/registr
      #
      # @param tag [Array<String>] Tags to be set on the Campaign.
      #
      # @param terms_and_conditions [Boolean] Is terms and conditions accepted?
      #
      # @param terms_and_conditions_link [String] Link to the campaign's terms and conditions.
      #
      # @param webhook_failover_url [String] Failover webhook to which campaign status updates are sent.
      #
      # @param webhook_url [String] Webhook to which campaign status updates are sent.
      #
      # @param request_options [Telnyx::RequestOptions, Hash{Symbol=>Object}, nil]
      #
      # @return [Object, Telnyx::Models::TelnyxCampaignCsp]
      #
      # @see Telnyx::Models::CampaignBuilderCreateParams
      def create(params)
        parsed, options = Telnyx::CampaignBuilderCreateParams.dump_request(params)
        @client.request(
          method: :post,
          path: "campaignBuilder",
          body: parsed,
          model: Telnyx::Models::CampaignBuilderCreateResponse,
          options: options
        )
      end

      # @api private
      #
      # @param client [Telnyx::Client]
      def initialize(client:)
        @client = client
        @brand = Telnyx::Resources::CampaignBuilder::Brand.new(client: client)
      end
    end
  end
end
