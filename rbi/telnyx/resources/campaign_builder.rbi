# typed: strong

module Telnyx
  module Resources
    class CampaignBuilder
      sig { returns(Telnyx::Resources::CampaignBuilder::Brand) }
      attr_reader :brand

      # Before creating a campaign, use the
      # [Qualify By Usecase endpoint](https://developers.telnyx.com/api/messaging/10dlc/get-usecase-qualification)
      # to ensure that the brand you want to assign a new campaign to is qualified for
      # the desired use case of that campaign. **Please note:** After campaign creation,
      # you'll only be able to edit the campaign's sample messages. Creating a campaign
      # will entail an upfront, non-refundable three month's cost that will depend on
      # the campaign's use case
      # ([see 10DLC Costs section for details](https://developers.telnyx.com/docs/messaging/10dlc/concepts#10dlc-costs)).
      sig do
        params(
          brand_id: String,
          description: String,
          usecase: String,
          age_gated: T::Boolean,
          auto_renewal: T::Boolean,
          direct_lending: T::Boolean,
          embedded_link: T::Boolean,
          embedded_link_sample: String,
          embedded_phone: T::Boolean,
          help_keywords: String,
          help_message: String,
          message_flow: String,
          mno_ids: T::Array[Integer],
          number_pool: T::Boolean,
          optin_keywords: String,
          optin_message: String,
          optout_keywords: String,
          optout_message: String,
          privacy_policy_link: String,
          reference_id: String,
          reseller_id: String,
          sample1: String,
          sample2: String,
          sample3: String,
          sample4: String,
          sample5: String,
          subscriber_help: T::Boolean,
          subscriber_optin: T::Boolean,
          subscriber_optout: T::Boolean,
          sub_usecases: T::Array[String],
          tag: T::Array[String],
          terms_and_conditions: T::Boolean,
          terms_and_conditions_link: String,
          webhook_failover_url: String,
          webhook_url: String,
          request_options: Telnyx::RequestOptions::OrHash
        ).returns(Telnyx::Models::CampaignBuilderCreateResponse::Variants)
      end
      def create(
        # Alphanumeric identifier of the brand associated with this campaign.
        brand_id:,
        # Summary description of this campaign.
        description:,
        # Campaign usecase. Must be of defined valid types. Use `/registry/enum/usecase`
        # operation to retrieve usecases available for given brand.
        usecase:,
        # Age gated message content in campaign.
        age_gated: nil,
        # Campaign subscription auto-renewal option. If set to true, then campaign will
        # automatically renewal at end of billing cycle.
        auto_renewal: nil,
        # Direct lending or loan arrangement
        direct_lending: nil,
        # Does message generated by the campaign include URL link in SMS?
        embedded_link: nil,
        # Sample of an embedded link that will be sent to subscribers.
        embedded_link_sample: nil,
        # Does message generated by the campaign include phone number in SMS?
        embedded_phone: nil,
        # Subscriber help keywords. Multiple keywords are comma separated without space.
        help_keywords: nil,
        # Help message of the campaign.
        help_message: nil,
        # Message flow description.
        message_flow: nil,
        # Submit campaign to given list of MNOs by MNO's network ID. Default is all MNOs
        # if no value provided.
        mno_ids: nil,
        # Does campaign utilize pool of phone numbers?
        number_pool: nil,
        # Subscriber opt-in keywords. Multiple keywords are comma separated without space.
        optin_keywords: nil,
        # Subscriber opt-in message.
        optin_message: nil,
        # Subscriber opt-out keywords. Multiple keywords are comma separated without
        # space.
        optout_keywords: nil,
        # Subscriber opt-out message.
        optout_message: nil,
        # Link to the campaign's privacy policy.
        privacy_policy_link: nil,
        # Caller supplied campaign reference ID. If supplied, the value must be unique
        # across all submitted campaigns. Can be used to prevent duplicate campaign
        # registrations.
        reference_id: nil,
        # Alphanumeric identifier of the reseller that you want to associate with this
        # campaign.
        reseller_id: nil,
        # Message sample. Some campaign tiers require 1 or more message samples.
        sample1: nil,
        # Message sample. Some campaign tiers require 2 or more message samples.
        sample2: nil,
        # Message sample. Some campaign tiers require 3 or more message samples.
        sample3: nil,
        # Message sample. Some campaign tiers require 4 or more message samples.
        sample4: nil,
        # Message sample. Some campaign tiers require 5 or more message samples.
        sample5: nil,
        # Does campaign responds to help keyword(s)?
        subscriber_help: nil,
        # Does campaign require subscriber to opt-in before SMS is sent to subscriber?
        subscriber_optin: nil,
        # Does campaign support subscriber opt-out keyword(s)?
        subscriber_optout: nil,
        # Campaign sub-usecases. Must be of defined valid sub-usecase types. Use
        # `/registry/enum/usecase` operation to retrieve list of valid sub-usecases
        sub_usecases: nil,
        # Tags to be set on the Campaign.
        tag: nil,
        # Is terms and conditions accepted?
        terms_and_conditions: nil,
        # Link to the campaign's terms and conditions.
        terms_and_conditions_link: nil,
        # Failover webhook to which campaign status updates are sent.
        webhook_failover_url: nil,
        # Webhook to which campaign status updates are sent.
        webhook_url: nil,
        request_options: {}
      )
      end

      # @api private
      sig { params(client: Telnyx::Client).returns(T.attached_class) }
      def self.new(client:)
      end
    end
  end
end
