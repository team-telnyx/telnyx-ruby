# typed: strong

module Telnyx
  module Models
    class URLShortenerSettings < Telnyx::Internal::Type::BaseModel
      OrHash =
        T.type_alias do
          T.any(Telnyx::URLShortenerSettings, Telnyx::Internal::AnyHash)
        end

      # One of the domains provided by the Telnyx URL shortener service.
      sig { returns(String) }
      attr_accessor :domain

      # Optional prefix that can be used to identify your brand, and will appear in the
      # Telnyx generated URLs after the domain name.
      sig { returns(T.nilable(String)) }
      attr_reader :prefix

      sig { params(prefix: String).void }
      attr_writer :prefix

      # Use the link replacement tool only for links that are specifically blacklisted
      # by Telnyx.
      sig { returns(T.nilable(T::Boolean)) }
      attr_reader :replace_blacklist_only

      sig { params(replace_blacklist_only: T::Boolean).void }
      attr_writer :replace_blacklist_only

      # Receive webhooks for when your replaced links are clicked. Webhooks are sent to
      # the webhooks on the messaging profile.
      sig { returns(T.nilable(T::Boolean)) }
      attr_reader :send_webhooks

      sig { params(send_webhooks: T::Boolean).void }
      attr_writer :send_webhooks

      # The URL shortener feature allows automatic replacement of URLs that were
      # generated using a public URL shortener service. Some examples include bit.do,
      # bit.ly, goo.gl, ht.ly, is.gd, ow.ly, rebrand.ly, t.co, tiny.cc, and tinyurl.com.
      # Such URLs are replaced with with links generated by Telnyx. The use of custom
      # links can improve branding and message deliverability.
      #
      # To disable this feature, set the object field to `null`.
      sig do
        params(
          domain: String,
          prefix: String,
          replace_blacklist_only: T::Boolean,
          send_webhooks: T::Boolean
        ).returns(T.attached_class)
      end
      def self.new(
        # One of the domains provided by the Telnyx URL shortener service.
        domain:,
        # Optional prefix that can be used to identify your brand, and will appear in the
        # Telnyx generated URLs after the domain name.
        prefix: nil,
        # Use the link replacement tool only for links that are specifically blacklisted
        # by Telnyx.
        replace_blacklist_only: nil,
        # Receive webhooks for when your replaced links are clicked. Webhooks are sent to
        # the webhooks on the messaging profile.
        send_webhooks: nil
      )
      end

      sig do
        override.returns(
          {
            domain: String,
            prefix: String,
            replace_blacklist_only: T::Boolean,
            send_webhooks: T::Boolean
          }
        )
      end
      def to_hash
      end
    end
  end
end
