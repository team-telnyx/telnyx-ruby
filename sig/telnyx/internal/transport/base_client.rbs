module Telnyx
  module Internal
    module Transport
      class BaseClient
        extend Telnyx::Internal::Util::SorbetRuntimeSupport

        type request_components =
          {
            method: Symbol,
            path: String | ::Array[String],
            query: ::Hash[String, (::Array[String] | String)?]?,
            headers: ::Hash[String, (String
            | Integer
            | ::Array[(String | Integer)?])?]?,
            body: top?,
            unwrap: (Symbol
            | Integer
            | ::Array[(Symbol | Integer)]
            | (^(top arg0) -> top))?,
            page: Class?,
            stream: Class?,
            model: Telnyx::Internal::Type::Converter::input?,
            options: Telnyx::request_opts?
          }
        type request_input =
          {
            method: Symbol,
            url: URI::Generic,
            headers: ::Hash[String, String],
            body: top,
            max_retries: Integer,
            timeout: Float
          }

        MAX_REDIRECTS: 20

        PLATFORM_HEADERS: ::Hash[String, String]

        def self.validate!: (
          Telnyx::Internal::Transport::BaseClient::request_components req
        ) -> void

        def self.should_retry?: (
          Integer status,
          headers: ::Hash[String, String]
        ) -> bool

        def self.follow_redirect: (
          Telnyx::Internal::Transport::BaseClient::request_input request,
          status: Integer,
          response_headers: ::Hash[String, String]
        ) -> Telnyx::Internal::Transport::BaseClient::request_input

        def self.reap_connection!: (
          Integer | Telnyx::Errors::APIConnectionError status,
          stream: Enumerable[String]?
        ) -> void

        attr_reader base_url: URI::Generic

        attr_reader timeout: Float

        attr_reader max_retries: Integer

        attr_reader initial_retry_delay: Float

        attr_reader max_retry_delay: Float

        attr_reader headers: ::Hash[String, String]

        attr_reader idempotency_header: String?

        # @api private
        attr_reader requester: Telnyx::Internal::Transport::PooledNetRequester

        def initialize: (
          base_url: String,
          ?timeout: Float,
          ?max_retries: Integer,
          ?initial_retry_delay: Float,
          ?max_retry_delay: Float,
          ?headers: ::Hash[String, (String
          | Integer
          | ::Array[(String | Integer)?])?],
          ?idempotency_header: String?
        ) -> void

        private def auth_headers: -> ::Hash[String, String]

        private def generate_idempotency_key: -> String

        private def build_request: (
          Telnyx::Internal::Transport::BaseClient::request_components req,
          Telnyx::request_options opts
        ) -> Telnyx::Internal::Transport::BaseClient::request_input

        private def retry_delay: (
          ::Hash[String, String] headers,
          retry_count: Integer
        ) -> Float

        def send_request: (
          Telnyx::Internal::Transport::BaseClient::request_input request,
          redirect_count: Integer,
          retry_count: Integer,
          send_retry_header: bool
        ) -> [Integer, top, Enumerable[String]]

        def request: (
          Symbol method,
          String | ::Array[String] path,
          ?query: ::Hash[String, (::Array[String] | String)?]?,
          ?headers: ::Hash[String, (String
          | Integer
          | ::Array[(String | Integer)?])?]?,
          ?body: top?,
          ?unwrap: (Symbol
          | Integer
          | ::Array[(Symbol | Integer)]
          | (^(top arg0) -> top))?,
          ?page: Class?,
          ?stream: Class?,
          ?model: Telnyx::Internal::Type::Converter::input?,
          ?options: Telnyx::request_opts?
        ) -> top

        def inspect: -> String
      end
    end
  end
end
