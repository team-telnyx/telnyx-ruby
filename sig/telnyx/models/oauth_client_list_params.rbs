module Telnyx
  module Models
    type oauth_client_list_params =
      {
        filter_allowed_grant_types_contains: Telnyx::Models::OAuthClientListParams::filter_allowed_grant_types_contains,
        filter_client_id: String,
        filter_client_type: Telnyx::Models::OAuthClientListParams::filter_client_type,
        filter_name: String,
        filter_name_contains: String,
        filter_verified: bool,
        page_number: Integer,
        page_size: Integer
      }
      & Telnyx::Internal::Type::request_parameters

    class OAuthClientListParams < Telnyx::Internal::Type::BaseModel
      extend Telnyx::Internal::Type::RequestParameters::Converter
      include Telnyx::Internal::Type::RequestParameters

      attr_reader filter_allowed_grant_types_contains: Telnyx::Models::OAuthClientListParams::filter_allowed_grant_types_contains?

      def filter_allowed_grant_types_contains=: (
        Telnyx::Models::OAuthClientListParams::filter_allowed_grant_types_contains
      ) -> Telnyx::Models::OAuthClientListParams::filter_allowed_grant_types_contains

      attr_reader filter_client_id: String?

      def filter_client_id=: (String) -> String

      attr_reader filter_client_type: Telnyx::Models::OAuthClientListParams::filter_client_type?

      def filter_client_type=: (
        Telnyx::Models::OAuthClientListParams::filter_client_type
      ) -> Telnyx::Models::OAuthClientListParams::filter_client_type

      attr_reader filter_name: String?

      def filter_name=: (String) -> String

      attr_reader filter_name_contains: String?

      def filter_name_contains=: (String) -> String

      attr_reader filter_verified: bool?

      def filter_verified=: (bool) -> bool

      attr_reader page_number: Integer?

      def page_number=: (Integer) -> Integer

      attr_reader page_size: Integer?

      def page_size=: (Integer) -> Integer

      def initialize: (
        ?filter_allowed_grant_types_contains: Telnyx::Models::OAuthClientListParams::filter_allowed_grant_types_contains,
        ?filter_client_id: String,
        ?filter_client_type: Telnyx::Models::OAuthClientListParams::filter_client_type,
        ?filter_name: String,
        ?filter_name_contains: String,
        ?filter_verified: bool,
        ?page_number: Integer,
        ?page_size: Integer,
        ?request_options: Telnyx::request_opts
      ) -> void

      def to_hash: -> {
        filter_allowed_grant_types_contains: Telnyx::Models::OAuthClientListParams::filter_allowed_grant_types_contains,
        filter_client_id: String,
        filter_client_type: Telnyx::Models::OAuthClientListParams::filter_client_type,
        filter_name: String,
        filter_name_contains: String,
        filter_verified: bool,
        page_number: Integer,
        page_size: Integer,
        request_options: Telnyx::RequestOptions
      }

      type filter_allowed_grant_types_contains =
        :client_credentials | :authorization_code | :refresh_token

      module FilterAllowedGrantTypesContains
        extend Telnyx::Internal::Type::Enum

        CLIENT_CREDENTIALS: :client_credentials
        AUTHORIZATION_CODE: :authorization_code
        REFRESH_TOKEN: :refresh_token

        def self?.values: -> ::Array[Telnyx::Models::OAuthClientListParams::filter_allowed_grant_types_contains]
      end

      type filter_client_type = :confidential | :public

      module FilterClientType
        extend Telnyx::Internal::Type::Enum

        CONFIDENTIAL: :confidential
        PUBLIC: :public

        def self?.values: -> ::Array[Telnyx::Models::OAuthClientListParams::filter_client_type]
      end
    end
  end
end
