module Telnyx
  module Models
    module BundlePricing
      type user_bundle_create_params =
        {
          idempotency_key: String,
          items: ::Array[Telnyx::BundlePricing::UserBundleCreateParams::Item],
          authorization_bearer: String
        }
        & Telnyx::Internal::Type::request_parameters

      class UserBundleCreateParams < Telnyx::Internal::Type::BaseModel
        extend Telnyx::Internal::Type::RequestParameters::Converter
        include Telnyx::Internal::Type::RequestParameters

        attr_reader idempotency_key: String?

        def idempotency_key=: (String) -> String

        attr_reader items: ::Array[Telnyx::BundlePricing::UserBundleCreateParams::Item]?

        def items=: (
          ::Array[Telnyx::BundlePricing::UserBundleCreateParams::Item]
        ) -> ::Array[Telnyx::BundlePricing::UserBundleCreateParams::Item]

        attr_reader authorization_bearer: String?

        def authorization_bearer=: (String) -> String

        def initialize: (
          ?idempotency_key: String,
          ?items: ::Array[Telnyx::BundlePricing::UserBundleCreateParams::Item],
          ?authorization_bearer: String,
          ?request_options: Telnyx::request_opts
        ) -> void

        def to_hash: -> {
          idempotency_key: String,
          items: ::Array[Telnyx::BundlePricing::UserBundleCreateParams::Item],
          authorization_bearer: String,
          request_options: Telnyx::RequestOptions
        }

        type item = { billing_bundle_id: String, quantity: Integer }

        class Item < Telnyx::Internal::Type::BaseModel
          attr_accessor billing_bundle_id: String

          attr_accessor quantity: Integer

          def initialize: (billing_bundle_id: String, quantity: Integer) -> void

          def to_hash: -> { billing_bundle_id: String, quantity: Integer }
        end
      end
    end
  end
end
