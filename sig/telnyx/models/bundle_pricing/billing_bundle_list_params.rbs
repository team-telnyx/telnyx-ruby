module Telnyx
  module Models
    module BundlePricing
      type billing_bundle_list_params =
        {
          filter: Telnyx::BundlePricing::BillingBundleListParams::Filter,
          page: Telnyx::BundlePricing::BillingBundleListParams::Page,
          authorization_bearer: String
        }
        & Telnyx::Internal::Type::request_parameters

      class BillingBundleListParams < Telnyx::Internal::Type::BaseModel
        extend Telnyx::Internal::Type::RequestParameters::Converter
        include Telnyx::Internal::Type::RequestParameters

        attr_reader filter: Telnyx::BundlePricing::BillingBundleListParams::Filter?

        def filter=: (
          Telnyx::BundlePricing::BillingBundleListParams::Filter
        ) -> Telnyx::BundlePricing::BillingBundleListParams::Filter

        attr_reader page: Telnyx::BundlePricing::BillingBundleListParams::Page?

        def page=: (
          Telnyx::BundlePricing::BillingBundleListParams::Page
        ) -> Telnyx::BundlePricing::BillingBundleListParams::Page

        attr_reader authorization_bearer: String?

        def authorization_bearer=: (String) -> String

        def initialize: (
          ?filter: Telnyx::BundlePricing::BillingBundleListParams::Filter,
          ?page: Telnyx::BundlePricing::BillingBundleListParams::Page,
          ?authorization_bearer: String,
          ?request_options: Telnyx::request_opts
        ) -> void

        def to_hash: -> {
          filter: Telnyx::BundlePricing::BillingBundleListParams::Filter,
          page: Telnyx::BundlePricing::BillingBundleListParams::Page,
          authorization_bearer: String,
          request_options: Telnyx::RequestOptions
        }

        type filter =
          { country_iso: ::Array[String], resource: ::Array[String] }

        class Filter < Telnyx::Internal::Type::BaseModel
          attr_reader country_iso: ::Array[String]?

          def country_iso=: (::Array[String]) -> ::Array[String]

          attr_reader resource: ::Array[String]?

          def resource=: (::Array[String]) -> ::Array[String]

          def initialize: (
            ?country_iso: ::Array[String],
            ?resource: ::Array[String]
          ) -> void

          def to_hash: -> {
            country_iso: ::Array[String],
            resource: ::Array[String]
          }
        end

        type page = { number: Integer, size: Integer }

        class Page < Telnyx::Internal::Type::BaseModel
          attr_reader number: Integer?

          def number=: (Integer) -> Integer

          attr_reader size: Integer?

          def size=: (Integer) -> Integer

          def initialize: (?number: Integer, ?size: Integer) -> void

          def to_hash: -> { number: Integer, size: Integer }
        end
      end
    end
  end
end
