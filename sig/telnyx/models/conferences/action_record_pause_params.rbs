module Telnyx
  module Models
    module Conferences
      type action_record_pause_params =
        {
          command_id: String,
          recording_id: String,
          region: Telnyx::Models::Conferences::ActionRecordPauseParams::region
        }
        & Telnyx::Internal::Type::request_parameters

      class ActionRecordPauseParams < Telnyx::Internal::Type::BaseModel
        extend Telnyx::Internal::Type::RequestParameters::Converter
        include Telnyx::Internal::Type::RequestParameters

        attr_reader command_id: String?

        def command_id=: (String) -> String

        attr_reader recording_id: String?

        def recording_id=: (String) -> String

        attr_reader region: Telnyx::Models::Conferences::ActionRecordPauseParams::region?

        def region=: (
          Telnyx::Models::Conferences::ActionRecordPauseParams::region
        ) -> Telnyx::Models::Conferences::ActionRecordPauseParams::region

        def initialize: (
          ?command_id: String,
          ?recording_id: String,
          ?region: Telnyx::Models::Conferences::ActionRecordPauseParams::region,
          ?request_options: Telnyx::request_opts
        ) -> void

        def to_hash: -> {
          command_id: String,
          recording_id: String,
          region: Telnyx::Models::Conferences::ActionRecordPauseParams::region,
          request_options: Telnyx::RequestOptions
        }

        type region = :Australia | :Europe | :"Middle East" | :US

        module Region
          extend Telnyx::Internal::Type::Enum

          AUSTRALIA: :Australia
          EUROPE: :Europe
          MIDDLE_EAST: :"Middle East"
          US: :US

          def self?.values: -> ::Array[Telnyx::Models::Conferences::ActionRecordPauseParams::region]
        end
      end
    end
  end
end
