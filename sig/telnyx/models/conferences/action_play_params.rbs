module Telnyx
  module Models
    module Conferences
      type action_play_params =
        {
          audio_url: String,
          call_control_ids: ::Array[String],
          loop_: Telnyx::Models::Calls::loopcount,
          media_name: String
        }
        & Telnyx::Internal::Type::request_parameters

      class ActionPlayParams < Telnyx::Internal::Type::BaseModel
        extend Telnyx::Internal::Type::RequestParameters::Converter
        include Telnyx::Internal::Type::RequestParameters

        attr_reader audio_url: String?

        def audio_url=: (String) -> String

        attr_reader call_control_ids: ::Array[String]?

        def call_control_ids=: (::Array[String]) -> ::Array[String]

        attr_reader loop_: Telnyx::Models::Calls::loopcount?

        def loop_=: (
          Telnyx::Models::Calls::loopcount
        ) -> Telnyx::Models::Calls::loopcount

        attr_reader media_name: String?

        def media_name=: (String) -> String

        def initialize: (
          ?audio_url: String,
          ?call_control_ids: ::Array[String],
          ?loop_: Telnyx::Models::Calls::loopcount,
          ?media_name: String,
          ?request_options: Telnyx::request_opts
        ) -> void

        def to_hash: -> {
          audio_url: String,
          call_control_ids: ::Array[String],
          loop_: Telnyx::Models::Calls::loopcount,
          media_name: String,
          request_options: Telnyx::RequestOptions
        }
      end
    end
  end
end
