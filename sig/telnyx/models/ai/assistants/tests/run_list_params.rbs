module Telnyx
  module Models
    module AI
      module Assistants
        module Tests
          type run_list_params =
            {
              page: Telnyx::AI::Assistants::Tests::RunListParams::Page,
              status: String
            }
            & Telnyx::Internal::Type::request_parameters

          class RunListParams < Telnyx::Internal::Type::BaseModel
            extend Telnyx::Internal::Type::RequestParameters::Converter
            include Telnyx::Internal::Type::RequestParameters

            attr_reader page: Telnyx::AI::Assistants::Tests::RunListParams::Page?

            def page=: (
              Telnyx::AI::Assistants::Tests::RunListParams::Page
            ) -> Telnyx::AI::Assistants::Tests::RunListParams::Page

            attr_reader status: String?

            def status=: (String) -> String

            def initialize: (
              ?page: Telnyx::AI::Assistants::Tests::RunListParams::Page,
              ?status: String,
              ?request_options: Telnyx::request_opts
            ) -> void

            def to_hash: -> {
              page: Telnyx::AI::Assistants::Tests::RunListParams::Page,
              status: String,
              request_options: Telnyx::RequestOptions
            }

            type page = { number: Integer, size: Integer }

            class Page < Telnyx::Internal::Type::BaseModel
              attr_reader number: Integer?

              def number=: (Integer) -> Integer

              attr_reader size: Integer?

              def size=: (Integer) -> Integer

              def initialize: (?number: Integer, ?size: Integer) -> void

              def to_hash: -> { number: Integer, size: Integer }
            end
          end
        end
      end
    end
  end
end
