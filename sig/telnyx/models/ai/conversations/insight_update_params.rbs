module Telnyx
  module Models
    module AI
      module Conversations
        type insight_update_params =
          {
            instructions: String,
            json_schema: Telnyx::Models::AI::Conversations::InsightUpdateParams::json_schema,
            name: String,
            webhook: String
          }
          & Telnyx::Internal::Type::request_parameters

        class InsightUpdateParams < Telnyx::Internal::Type::BaseModel
          extend Telnyx::Internal::Type::RequestParameters::Converter
          include Telnyx::Internal::Type::RequestParameters

          attr_reader instructions: String?

          def instructions=: (String) -> String

          attr_reader json_schema: Telnyx::Models::AI::Conversations::InsightUpdateParams::json_schema?

          def json_schema=: (
            Telnyx::Models::AI::Conversations::InsightUpdateParams::json_schema
          ) -> Telnyx::Models::AI::Conversations::InsightUpdateParams::json_schema

          attr_reader name: String?

          def name=: (String) -> String

          attr_reader webhook: String?

          def webhook=: (String) -> String

          def initialize: (
            ?instructions: String,
            ?json_schema: Telnyx::Models::AI::Conversations::InsightUpdateParams::json_schema,
            ?name: String,
            ?webhook: String,
            ?request_options: Telnyx::request_opts
          ) -> void

          def to_hash: -> {
            instructions: String,
            json_schema: Telnyx::Models::AI::Conversations::InsightUpdateParams::json_schema,
            name: String,
            webhook: String,
            request_options: Telnyx::RequestOptions
          }

          type json_schema = String | top

          module JsonSchema
            extend Telnyx::Internal::Type::Union

            def self?.variants: -> ::Array[Telnyx::Models::AI::Conversations::InsightUpdateParams::json_schema]
          end
        end
      end
    end
  end
end
