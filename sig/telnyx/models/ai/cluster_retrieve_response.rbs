module Telnyx
  module Models
    module AI
      type cluster_retrieve_response =
        { data: Telnyx::Models::AI::ClusterRetrieveResponse::Data }

      class ClusterRetrieveResponse < Telnyx::Internal::Type::BaseModel
        attr_accessor data: Telnyx::Models::AI::ClusterRetrieveResponse::Data

        def initialize: (
          data: Telnyx::Models::AI::ClusterRetrieveResponse::Data
        ) -> void

        def to_hash: -> {
          data: Telnyx::Models::AI::ClusterRetrieveResponse::Data
        }

        type data =
          {
            bucket: String,
            clusters: ::Array[Telnyx::AI::RecursiveCluster],
            status: Telnyx::Models::task_status
          }

        class Data < Telnyx::Internal::Type::BaseModel
          attr_accessor bucket: String

          attr_accessor clusters: ::Array[Telnyx::AI::RecursiveCluster]

          attr_accessor status: Telnyx::Models::task_status

          def initialize: (
            bucket: String,
            clusters: ::Array[Telnyx::AI::RecursiveCluster],
            status: Telnyx::Models::task_status
          ) -> void

          def to_hash: -> {
            bucket: String,
            clusters: ::Array[Telnyx::AI::RecursiveCluster],
            status: Telnyx::Models::task_status
          }
        end
      end
    end
  end
end
