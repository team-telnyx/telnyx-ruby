module Telnyx
  module Models
    module AI
      module FineTuning
        type job_create_params =
          {
            model: String,
            training_file: String,
            hyperparameters: Telnyx::AI::FineTuning::JobCreateParams::Hyperparameters,
            suffix: String
          }
          & Telnyx::Internal::Type::request_parameters

        class JobCreateParams < Telnyx::Internal::Type::BaseModel
          extend Telnyx::Internal::Type::RequestParameters::Converter
          include Telnyx::Internal::Type::RequestParameters

          attr_accessor model: String

          attr_accessor training_file: String

          attr_reader hyperparameters: Telnyx::AI::FineTuning::JobCreateParams::Hyperparameters?

          def hyperparameters=: (
            Telnyx::AI::FineTuning::JobCreateParams::Hyperparameters
          ) -> Telnyx::AI::FineTuning::JobCreateParams::Hyperparameters

          attr_reader suffix: String?

          def suffix=: (String) -> String

          def initialize: (
            model: String,
            training_file: String,
            ?hyperparameters: Telnyx::AI::FineTuning::JobCreateParams::Hyperparameters,
            ?suffix: String,
            ?request_options: Telnyx::request_opts
          ) -> void

          def to_hash: -> {
            model: String,
            training_file: String,
            hyperparameters: Telnyx::AI::FineTuning::JobCreateParams::Hyperparameters,
            suffix: String,
            request_options: Telnyx::RequestOptions
          }

          type hyperparameters = { n_epochs: Integer }

          class Hyperparameters < Telnyx::Internal::Type::BaseModel
            attr_reader n_epochs: Integer?

            def n_epochs=: (Integer) -> Integer

            def initialize: (?n_epochs: Integer) -> void

            def to_hash: -> { n_epochs: Integer }
          end
        end
      end
    end
  end
end
