module Telnyx
  module Models
    module AI
      type cluster_compute_params =
        {
          bucket: String,
          files: ::Array[String],
          min_cluster_size: Integer,
          min_subcluster_size: Integer,
          prefix: String
        }
        & Telnyx::Internal::Type::request_parameters

      class ClusterComputeParams < Telnyx::Internal::Type::BaseModel
        extend Telnyx::Internal::Type::RequestParameters::Converter
        include Telnyx::Internal::Type::RequestParameters

        attr_accessor bucket: String

        attr_reader files: ::Array[String]?

        def files=: (::Array[String]) -> ::Array[String]

        attr_reader min_cluster_size: Integer?

        def min_cluster_size=: (Integer) -> Integer

        attr_reader min_subcluster_size: Integer?

        def min_subcluster_size=: (Integer) -> Integer

        attr_reader prefix: String?

        def prefix=: (String) -> String

        def initialize: (
          bucket: String,
          ?files: ::Array[String],
          ?min_cluster_size: Integer,
          ?min_subcluster_size: Integer,
          ?prefix: String,
          ?request_options: Telnyx::request_opts
        ) -> void

        def to_hash: -> {
          bucket: String,
          files: ::Array[String],
          min_cluster_size: Integer,
          min_subcluster_size: Integer,
          prefix: String,
          request_options: Telnyx::RequestOptions
        }
      end
    end
  end
end
