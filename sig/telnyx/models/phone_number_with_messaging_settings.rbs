module Telnyx
  module Models
    type phone_number_with_messaging_settings =
      {
        id: String,
        country_code: String,
        created_at: Time,
        eligible_messaging_products: ::Array[String],
        features: Telnyx::PhoneNumberWithMessagingSettings::Features,
        health: Telnyx::NumberHealthMetrics,
        messaging_product: String,
        messaging_profile_id: String?,
        phone_number: String,
        record_type: Telnyx::Models::PhoneNumberWithMessagingSettings::record_type,
        traffic_type: String,
        type: Telnyx::Models::PhoneNumberWithMessagingSettings::type_,
        updated_at: Time
      }

    class PhoneNumberWithMessagingSettings < Telnyx::Internal::Type::BaseModel
      attr_reader health: Telnyx::NumberHealthMetrics?

      def health=: (Telnyx::NumberHealthMetrics) -> Telnyx::NumberHealthMetrics

      attr_reader messaging_product: String?

      def messaging_product=: (String) -> String

      attr_accessor messaging_profile_id: String?

      attr_reader id: String?

      def id=: (String) -> String

      attr_reader country_code: String?

      def country_code=: (String) -> String

      attr_reader created_at: Time?

      def created_at=: (Time) -> Time

      attr_reader eligible_messaging_products: ::Array[String]?

      def eligible_messaging_products=: (::Array[String]) -> ::Array[String]

      attr_reader features: Telnyx::PhoneNumberWithMessagingSettings::Features?

      def features=: (
        Telnyx::PhoneNumberWithMessagingSettings::Features
      ) -> Telnyx::PhoneNumberWithMessagingSettings::Features

      attr_reader phone_number: String?

      def phone_number=: (String) -> String

      attr_reader record_type: Telnyx::Models::PhoneNumberWithMessagingSettings::record_type?

      def record_type=: (
        Telnyx::Models::PhoneNumberWithMessagingSettings::record_type
      ) -> Telnyx::Models::PhoneNumberWithMessagingSettings::record_type

      attr_reader traffic_type: String?

      def traffic_type=: (String) -> String

      attr_reader type: Telnyx::Models::PhoneNumberWithMessagingSettings::type_?

      def type=: (
        Telnyx::Models::PhoneNumberWithMessagingSettings::type_
      ) -> Telnyx::Models::PhoneNumberWithMessagingSettings::type_

      attr_reader updated_at: Time?

      def updated_at=: (Time) -> Time

      def initialize: (
        ?id: String,
        ?country_code: String,
        ?created_at: Time,
        ?eligible_messaging_products: ::Array[String],
        ?features: Telnyx::PhoneNumberWithMessagingSettings::Features,
        ?health: Telnyx::NumberHealthMetrics,
        ?messaging_product: String,
        ?messaging_profile_id: String?,
        ?phone_number: String,
        ?record_type: Telnyx::Models::PhoneNumberWithMessagingSettings::record_type,
        ?traffic_type: String,
        ?type: Telnyx::Models::PhoneNumberWithMessagingSettings::type_,
        ?updated_at: Time
      ) -> void

      def to_hash: -> {
        id: String,
        country_code: String,
        created_at: Time,
        eligible_messaging_products: ::Array[String],
        features: Telnyx::PhoneNumberWithMessagingSettings::Features,
        health: Telnyx::NumberHealthMetrics,
        messaging_product: String,
        messaging_profile_id: String?,
        phone_number: String,
        record_type: Telnyx::Models::PhoneNumberWithMessagingSettings::record_type,
        traffic_type: String,
        type: Telnyx::Models::PhoneNumberWithMessagingSettings::type_,
        updated_at: Time
      }

      type features =
        { mms: Telnyx::MessagingFeatureSet?, sms: Telnyx::MessagingFeatureSet? }

      class Features < Telnyx::Internal::Type::BaseModel
        attr_accessor mms: Telnyx::MessagingFeatureSet?

        attr_accessor sms: Telnyx::MessagingFeatureSet?

        def initialize: (
          ?mms: Telnyx::MessagingFeatureSet?,
          ?sms: Telnyx::MessagingFeatureSet?
        ) -> void

        def to_hash: -> {
          mms: Telnyx::MessagingFeatureSet?,
          sms: Telnyx::MessagingFeatureSet?
        }
      end

      type record_type = :messaging_phone_number | :messaging_settings

      module RecordType
        extend Telnyx::Internal::Type::Enum

        MESSAGING_PHONE_NUMBER: :messaging_phone_number
        MESSAGING_SETTINGS: :messaging_settings

        def self?.values: -> ::Array[Telnyx::Models::PhoneNumberWithMessagingSettings::record_type]
      end

      type type_ =
        :"long-code"
        | :"toll-free"
        | :"short-code"
        | :longcode
        | :tollfree
        | :shortcode

      module Type
        extend Telnyx::Internal::Type::Enum

        LONG_CODE: :"long-code"
        TOLL_FREE: :"toll-free"
        SHORT_CODE: :"short-code"
        LONGCODE: :longcode
        TOLLFREE: :tollfree
        SHORTCODE: :shortcode

        def self?.values: -> ::Array[Telnyx::Models::PhoneNumberWithMessagingSettings::type_]
      end
    end
  end
end
