module Telnyx
  module Models
    module Verifications
      type action_verify_params =
        {
          code: String,
          status: Telnyx::Models::Verifications::ActionVerifyParams::status
        }
        & Telnyx::Internal::Type::request_parameters

      class ActionVerifyParams < Telnyx::Internal::Type::BaseModel
        extend Telnyx::Internal::Type::RequestParameters::Converter
        include Telnyx::Internal::Type::RequestParameters

        attr_reader code: String?

        def code=: (String) -> String

        attr_reader status: Telnyx::Models::Verifications::ActionVerifyParams::status?

        def status=: (
          Telnyx::Models::Verifications::ActionVerifyParams::status
        ) -> Telnyx::Models::Verifications::ActionVerifyParams::status

        def initialize: (
          ?code: String,
          ?status: Telnyx::Models::Verifications::ActionVerifyParams::status,
          ?request_options: Telnyx::request_opts
        ) -> void

        def to_hash: -> {
          code: String,
          status: Telnyx::Models::Verifications::ActionVerifyParams::status,
          request_options: Telnyx::RequestOptions
        }

        type status = :accepted | :rejected

        module Status
          extend Telnyx::Internal::Type::Enum

          ACCEPTED: :accepted
          REJECTED: :rejected

          def self?.values: -> ::Array[Telnyx::Models::Verifications::ActionVerifyParams::status]
        end
      end
    end
  end
end
