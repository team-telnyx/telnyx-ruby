module Telnyx
  module Models
    type room_recording_delete_bulk_params =
      {
        filter: Telnyx::RoomRecordingDeleteBulkParams::Filter,
        page: Telnyx::RoomRecordingDeleteBulkParams::Page
      }
      & Telnyx::Internal::Type::request_parameters

    class RoomRecordingDeleteBulkParams < Telnyx::Internal::Type::BaseModel
      extend Telnyx::Internal::Type::RequestParameters::Converter
      include Telnyx::Internal::Type::RequestParameters

      attr_reader filter: Telnyx::RoomRecordingDeleteBulkParams::Filter?

      def filter=: (
        Telnyx::RoomRecordingDeleteBulkParams::Filter
      ) -> Telnyx::RoomRecordingDeleteBulkParams::Filter

      attr_reader page: Telnyx::RoomRecordingDeleteBulkParams::Page?

      def page=: (
        Telnyx::RoomRecordingDeleteBulkParams::Page
      ) -> Telnyx::RoomRecordingDeleteBulkParams::Page

      def initialize: (
        ?filter: Telnyx::RoomRecordingDeleteBulkParams::Filter,
        ?page: Telnyx::RoomRecordingDeleteBulkParams::Page,
        ?request_options: Telnyx::request_opts
      ) -> void

      def to_hash: -> {
        filter: Telnyx::RoomRecordingDeleteBulkParams::Filter,
        page: Telnyx::RoomRecordingDeleteBulkParams::Page,
        request_options: Telnyx::RequestOptions
      }

      type filter =
        {
          date_ended_at: Telnyx::RoomRecordingDeleteBulkParams::Filter::DateEndedAt,
          date_started_at: Telnyx::RoomRecordingDeleteBulkParams::Filter::DateStartedAt,
          duration_secs: Integer,
          participant_id: String,
          room_id: String,
          session_id: String,
          status: String,
          type: String
        }

      class Filter < Telnyx::Internal::Type::BaseModel
        attr_reader date_ended_at: Telnyx::RoomRecordingDeleteBulkParams::Filter::DateEndedAt?

        def date_ended_at=: (
          Telnyx::RoomRecordingDeleteBulkParams::Filter::DateEndedAt
        ) -> Telnyx::RoomRecordingDeleteBulkParams::Filter::DateEndedAt

        attr_reader date_started_at: Telnyx::RoomRecordingDeleteBulkParams::Filter::DateStartedAt?

        def date_started_at=: (
          Telnyx::RoomRecordingDeleteBulkParams::Filter::DateStartedAt
        ) -> Telnyx::RoomRecordingDeleteBulkParams::Filter::DateStartedAt

        attr_reader duration_secs: Integer?

        def duration_secs=: (Integer) -> Integer

        attr_reader participant_id: String?

        def participant_id=: (String) -> String

        attr_reader room_id: String?

        def room_id=: (String) -> String

        attr_reader session_id: String?

        def session_id=: (String) -> String

        attr_reader status: String?

        def status=: (String) -> String

        attr_reader type: String?

        def type=: (String) -> String

        def initialize: (
          ?date_ended_at: Telnyx::RoomRecordingDeleteBulkParams::Filter::DateEndedAt,
          ?date_started_at: Telnyx::RoomRecordingDeleteBulkParams::Filter::DateStartedAt,
          ?duration_secs: Integer,
          ?participant_id: String,
          ?room_id: String,
          ?session_id: String,
          ?status: String,
          ?type: String
        ) -> void

        def to_hash: -> {
          date_ended_at: Telnyx::RoomRecordingDeleteBulkParams::Filter::DateEndedAt,
          date_started_at: Telnyx::RoomRecordingDeleteBulkParams::Filter::DateStartedAt,
          duration_secs: Integer,
          participant_id: String,
          room_id: String,
          session_id: String,
          status: String,
          type: String
        }

        type date_ended_at = { eq: Date, gte: Date, lte: Date }

        class DateEndedAt < Telnyx::Internal::Type::BaseModel
          attr_reader eq: Date?

          def eq=: (Date) -> Date

          attr_reader gte: Date?

          def gte=: (Date) -> Date

          attr_reader lte: Date?

          def lte=: (Date) -> Date

          def initialize: (?eq: Date, ?gte: Date, ?lte: Date) -> void

          def to_hash: -> { eq: Date, gte: Date, lte: Date }
        end

        type date_started_at = { eq: Date, gte: Date, lte: Date }

        class DateStartedAt < Telnyx::Internal::Type::BaseModel
          attr_reader eq: Date?

          def eq=: (Date) -> Date

          attr_reader gte: Date?

          def gte=: (Date) -> Date

          attr_reader lte: Date?

          def lte=: (Date) -> Date

          def initialize: (?eq: Date, ?gte: Date, ?lte: Date) -> void

          def to_hash: -> { eq: Date, gte: Date, lte: Date }
        end
      end

      type page = { number: Integer, size: Integer }

      class Page < Telnyx::Internal::Type::BaseModel
        attr_reader number: Integer?

        def number=: (Integer) -> Integer

        attr_reader size: Integer?

        def size=: (Integer) -> Integer

        def initialize: (?number: Integer, ?size: Integer) -> void

        def to_hash: -> { number: Integer, size: Integer }
      end
    end
  end
end
