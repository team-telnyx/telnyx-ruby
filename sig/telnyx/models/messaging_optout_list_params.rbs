module Telnyx
  module Models
    type messaging_optout_list_params =
      {
        created_at: Telnyx::MessagingOptoutListParams::CreatedAt,
        filter: Telnyx::MessagingOptoutListParams::Filter,
        page: Telnyx::MessagingOptoutListParams::Page,
        redaction_enabled: String
      }
      & Telnyx::Internal::Type::request_parameters

    class MessagingOptoutListParams < Telnyx::Internal::Type::BaseModel
      extend Telnyx::Internal::Type::RequestParameters::Converter
      include Telnyx::Internal::Type::RequestParameters

      attr_reader created_at: Telnyx::MessagingOptoutListParams::CreatedAt?

      def created_at=: (
        Telnyx::MessagingOptoutListParams::CreatedAt
      ) -> Telnyx::MessagingOptoutListParams::CreatedAt

      attr_reader filter: Telnyx::MessagingOptoutListParams::Filter?

      def filter=: (
        Telnyx::MessagingOptoutListParams::Filter
      ) -> Telnyx::MessagingOptoutListParams::Filter

      attr_reader page: Telnyx::MessagingOptoutListParams::Page?

      def page=: (
        Telnyx::MessagingOptoutListParams::Page
      ) -> Telnyx::MessagingOptoutListParams::Page

      attr_reader redaction_enabled: String?

      def redaction_enabled=: (String) -> String

      def initialize: (
        ?created_at: Telnyx::MessagingOptoutListParams::CreatedAt,
        ?filter: Telnyx::MessagingOptoutListParams::Filter,
        ?page: Telnyx::MessagingOptoutListParams::Page,
        ?redaction_enabled: String,
        ?request_options: Telnyx::request_opts
      ) -> void

      def to_hash: -> {
        created_at: Telnyx::MessagingOptoutListParams::CreatedAt,
        filter: Telnyx::MessagingOptoutListParams::Filter,
        page: Telnyx::MessagingOptoutListParams::Page,
        redaction_enabled: String,
        request_options: Telnyx::RequestOptions
      }

      type created_at = { gte: Time, lte: Time }

      class CreatedAt < Telnyx::Internal::Type::BaseModel
        attr_reader gte: Time?

        def gte=: (Time) -> Time

        attr_reader lte: Time?

        def lte=: (Time) -> Time

        def initialize: (?gte: Time, ?lte: Time) -> void

        def to_hash: -> { gte: Time, lte: Time }
      end

      type filter = { from: String, messaging_profile_id: String }

      class Filter < Telnyx::Internal::Type::BaseModel
        attr_reader from: String?

        def from=: (String) -> String

        attr_reader messaging_profile_id: String?

        def messaging_profile_id=: (String) -> String

        def initialize: (?from: String, ?messaging_profile_id: String) -> void

        def to_hash: -> { from: String, messaging_profile_id: String }
      end

      type page = { number: Integer, size: Integer }

      class Page < Telnyx::Internal::Type::BaseModel
        attr_reader number: Integer?

        def number=: (Integer) -> Integer

        attr_reader size: Integer?

        def size=: (Integer) -> Integer

        def initialize: (?number: Integer, ?size: Integer) -> void

        def to_hash: -> { number: Integer, size: Integer }
      end
    end
  end
end
