module Telnyx
  module Models
    type ip =
      {
        id: String,
        connection_id: String,
        created_at: String,
        ip_address: String,
        port: Integer,
        record_type: String,
        updated_at: String
      }

    class IP < Telnyx::Internal::Type::BaseModel
      attr_reader id: String?

      def id=: (String) -> String

      attr_reader connection_id: String?

      def connection_id=: (String) -> String

      attr_reader created_at: String?

      def created_at=: (String) -> String

      attr_reader ip_address: String?

      def ip_address=: (String) -> String

      attr_reader port: Integer?

      def port=: (Integer) -> Integer

      attr_reader record_type: String?

      def record_type=: (String) -> String

      attr_reader updated_at: String?

      def updated_at=: (String) -> String

      def initialize: (
        ?id: String,
        ?connection_id: String,
        ?created_at: String,
        ?ip_address: String,
        ?port: Integer,
        ?record_type: String,
        ?updated_at: String
      ) -> void

      def to_hash: -> {
        id: String,
        connection_id: String,
        created_at: String,
        ip_address: String,
        port: Integer,
        record_type: String,
        updated_at: String
      }
    end
  end
end
