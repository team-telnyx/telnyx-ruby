module Telnyx
  module Models
    type fax_create_params =
      {
        connection_id: String,
        from: String,
        to: String,
        client_state: String,
        from_display_name: String,
        media_name: String,
        media_url: String,
        monochrome: bool,
        preview_format: Telnyx::Models::FaxCreateParams::preview_format,
        quality: Telnyx::Models::FaxCreateParams::quality,
        store_media: bool,
        store_preview: bool,
        :t38_enabled => bool,
        webhook_url: String
      }
      & Telnyx::Internal::Type::request_parameters

    class FaxCreateParams < Telnyx::Internal::Type::BaseModel
      extend Telnyx::Internal::Type::RequestParameters::Converter
      include Telnyx::Internal::Type::RequestParameters

      attr_accessor connection_id: String

      attr_accessor from: String

      attr_accessor to: String

      attr_reader client_state: String?

      def client_state=: (String) -> String

      attr_reader from_display_name: String?

      def from_display_name=: (String) -> String

      attr_reader media_name: String?

      def media_name=: (String) -> String

      attr_reader media_url: String?

      def media_url=: (String) -> String

      attr_reader monochrome: bool?

      def monochrome=: (bool) -> bool

      attr_reader preview_format: Telnyx::Models::FaxCreateParams::preview_format?

      def preview_format=: (
        Telnyx::Models::FaxCreateParams::preview_format
      ) -> Telnyx::Models::FaxCreateParams::preview_format

      attr_reader quality: Telnyx::Models::FaxCreateParams::quality?

      def quality=: (
        Telnyx::Models::FaxCreateParams::quality
      ) -> Telnyx::Models::FaxCreateParams::quality

      attr_reader store_media: bool?

      def store_media=: (bool) -> bool

      attr_reader store_preview: bool?

      def store_preview=: (bool) -> bool

      attr_reader t38_enabled: bool?

      def t38_enabled=: (bool) -> bool

      attr_reader webhook_url: String?

      def webhook_url=: (String) -> String

      def initialize: (
        connection_id: String,
        from: String,
        to: String,
        ?client_state: String,
        ?from_display_name: String,
        ?media_name: String,
        ?media_url: String,
        ?monochrome: bool,
        ?preview_format: Telnyx::Models::FaxCreateParams::preview_format,
        ?quality: Telnyx::Models::FaxCreateParams::quality,
        ?store_media: bool,
        ?store_preview: bool,
        ?t38_enabled: bool,
        ?webhook_url: String,
        ?request_options: Telnyx::request_opts
      ) -> void

      def to_hash: -> {
        connection_id: String,
        from: String,
        to: String,
        client_state: String,
        from_display_name: String,
        media_name: String,
        media_url: String,
        monochrome: bool,
        preview_format: Telnyx::Models::FaxCreateParams::preview_format,
        quality: Telnyx::Models::FaxCreateParams::quality,
        store_media: bool,
        store_preview: bool,
        :t38_enabled => bool,
        webhook_url: String,
        request_options: Telnyx::RequestOptions
      }

      type preview_format = :pdf | :tiff

      module PreviewFormat
        extend Telnyx::Internal::Type::Enum

        PDF: :pdf
        TIFF: :tiff

        def self?.values: -> ::Array[Telnyx::Models::FaxCreateParams::preview_format]
      end

      type quality = :normal | :high | :very_high | :ultra_light | :ultra_dark

      module Quality
        extend Telnyx::Internal::Type::Enum

        NORMAL: :normal
        HIGH: :high
        VERY_HIGH: :very_high
        ULTRA_LIGHT: :ultra_light
        ULTRA_DARK: :ultra_dark

        def self?.values: -> ::Array[Telnyx::Models::FaxCreateParams::quality]
      end
    end
  end
end
