module Telnyx
  module Models
    type connection_list_active_calls_params =
      { page: Telnyx::ConnectionListActiveCallsParams::Page }
      & Telnyx::Internal::Type::request_parameters

    class ConnectionListActiveCallsParams < Telnyx::Internal::Type::BaseModel
      extend Telnyx::Internal::Type::RequestParameters::Converter
      include Telnyx::Internal::Type::RequestParameters

      attr_reader page: Telnyx::ConnectionListActiveCallsParams::Page?

      def page=: (
        Telnyx::ConnectionListActiveCallsParams::Page
      ) -> Telnyx::ConnectionListActiveCallsParams::Page

      def initialize: (
        ?page: Telnyx::ConnectionListActiveCallsParams::Page,
        ?request_options: Telnyx::request_opts
      ) -> void

      def to_hash: -> {
        page: Telnyx::ConnectionListActiveCallsParams::Page,
        request_options: Telnyx::RequestOptions
      }

      type page =
        {
          after: String,
          before: String,
          limit: Integer,
          number: Integer,
          size: Integer
        }

      class Page < Telnyx::Internal::Type::BaseModel
        attr_reader after: String?

        def after=: (String) -> String

        attr_reader before: String?

        def before=: (String) -> String

        attr_reader limit: Integer?

        def limit=: (Integer) -> Integer

        attr_reader number: Integer?

        def number=: (Integer) -> Integer

        attr_reader size: Integer?

        def size=: (Integer) -> Integer

        def initialize: (
          ?after: String,
          ?before: String,
          ?limit: Integer,
          ?number: Integer,
          ?size: Integer
        ) -> void

        def to_hash: -> {
          after: String,
          before: String,
          limit: Integer,
          number: Integer,
          size: Integer
        }
      end
    end
  end
end
