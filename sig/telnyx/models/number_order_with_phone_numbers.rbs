module Telnyx
  module Models
    type number_order_with_phone_numbers =
      {
        id: String,
        billing_group_id: String,
        connection_id: String,
        created_at: Time,
        customer_reference: String,
        messaging_profile_id: String,
        phone_numbers: ::Array[Telnyx::PhoneNumber],
        phone_numbers_count: Integer,
        record_type: String,
        requirements_met: bool,
        status: Telnyx::Models::NumberOrderWithPhoneNumbers::status,
        sub_number_orders_ids: ::Array[String],
        updated_at: Time
      }

    class NumberOrderWithPhoneNumbers < Telnyx::Internal::Type::BaseModel
      attr_reader billing_group_id: String?

      def billing_group_id=: (String) -> String

      attr_reader connection_id: String?

      def connection_id=: (String) -> String

      attr_reader customer_reference: String?

      def customer_reference=: (String) -> String

      attr_reader messaging_profile_id: String?

      def messaging_profile_id=: (String) -> String

      attr_reader phone_numbers: ::Array[Telnyx::PhoneNumber]?

      def phone_numbers=: (
        ::Array[Telnyx::PhoneNumber]
      ) -> ::Array[Telnyx::PhoneNumber]

      attr_reader sub_number_orders_ids: ::Array[String]?

      def sub_number_orders_ids=: (::Array[String]) -> ::Array[String]

      attr_reader id: String?

      def id=: (String) -> String

      attr_reader created_at: Time?

      def created_at=: (Time) -> Time

      attr_reader phone_numbers_count: Integer?

      def phone_numbers_count=: (Integer) -> Integer

      attr_reader record_type: String?

      def record_type=: (String) -> String

      attr_reader requirements_met: bool?

      def requirements_met=: (bool) -> bool

      attr_reader status: Telnyx::Models::NumberOrderWithPhoneNumbers::status?

      def status=: (
        Telnyx::Models::NumberOrderWithPhoneNumbers::status
      ) -> Telnyx::Models::NumberOrderWithPhoneNumbers::status

      attr_reader updated_at: Time?

      def updated_at=: (Time) -> Time

      def initialize: (
        ?id: String,
        ?billing_group_id: String,
        ?connection_id: String,
        ?created_at: Time,
        ?customer_reference: String,
        ?messaging_profile_id: String,
        ?phone_numbers: ::Array[Telnyx::PhoneNumber],
        ?phone_numbers_count: Integer,
        ?record_type: String,
        ?requirements_met: bool,
        ?status: Telnyx::Models::NumberOrderWithPhoneNumbers::status,
        ?sub_number_orders_ids: ::Array[String],
        ?updated_at: Time
      ) -> void

      def to_hash: -> {
        id: String,
        billing_group_id: String,
        connection_id: String,
        created_at: Time,
        customer_reference: String,
        messaging_profile_id: String,
        phone_numbers: ::Array[Telnyx::PhoneNumber],
        phone_numbers_count: Integer,
        record_type: String,
        requirements_met: bool,
        status: Telnyx::Models::NumberOrderWithPhoneNumbers::status,
        sub_number_orders_ids: ::Array[String],
        updated_at: Time
      }

      type status = :pending | :success | :failure

      module Status
        extend Telnyx::Internal::Type::Enum

        PENDING: :pending
        SUCCESS: :success
        FAILURE: :failure

        def self?.values: -> ::Array[Telnyx::Models::NumberOrderWithPhoneNumbers::status]
      end
    end
  end
end
