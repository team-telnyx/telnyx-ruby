module Telnyx
  module Models
    type usage_report_list_params =
      {
        dimensions: ::Array[String],
        metrics: ::Array[String],
        product: String,
        date_range: String,
        end_date: String,
        filter: String,
        format_: Telnyx::Models::UsageReportListParams::format_,
        managed_accounts: bool,
        page: Telnyx::UsageReportListParams::Page,
        sort: ::Array[String],
        start_date: String,
        authorization_bearer: String
      }
      & Telnyx::Internal::Type::request_parameters

    class UsageReportListParams < Telnyx::Internal::Type::BaseModel
      extend Telnyx::Internal::Type::RequestParameters::Converter
      include Telnyx::Internal::Type::RequestParameters

      attr_accessor dimensions: ::Array[String]

      attr_accessor metrics: ::Array[String]

      attr_accessor product: String

      attr_reader date_range: String?

      def date_range=: (String) -> String

      attr_reader end_date: String?

      def end_date=: (String) -> String

      attr_reader filter: String?

      def filter=: (String) -> String

      attr_reader format_: Telnyx::Models::UsageReportListParams::format_?

      def format_=: (
        Telnyx::Models::UsageReportListParams::format_
      ) -> Telnyx::Models::UsageReportListParams::format_

      attr_reader managed_accounts: bool?

      def managed_accounts=: (bool) -> bool

      attr_reader page: Telnyx::UsageReportListParams::Page?

      def page=: (
        Telnyx::UsageReportListParams::Page
      ) -> Telnyx::UsageReportListParams::Page

      attr_reader sort: ::Array[String]?

      def sort=: (::Array[String]) -> ::Array[String]

      attr_reader start_date: String?

      def start_date=: (String) -> String

      attr_reader authorization_bearer: String?

      def authorization_bearer=: (String) -> String

      def initialize: (
        dimensions: ::Array[String],
        metrics: ::Array[String],
        product: String,
        ?date_range: String,
        ?end_date: String,
        ?filter: String,
        ?format_: Telnyx::Models::UsageReportListParams::format_,
        ?managed_accounts: bool,
        ?page: Telnyx::UsageReportListParams::Page,
        ?sort: ::Array[String],
        ?start_date: String,
        ?authorization_bearer: String,
        ?request_options: Telnyx::request_opts
      ) -> void

      def to_hash: -> {
        dimensions: ::Array[String],
        metrics: ::Array[String],
        product: String,
        date_range: String,
        end_date: String,
        filter: String,
        format_: Telnyx::Models::UsageReportListParams::format_,
        managed_accounts: bool,
        page: Telnyx::UsageReportListParams::Page,
        sort: ::Array[String],
        start_date: String,
        authorization_bearer: String,
        request_options: Telnyx::RequestOptions
      }

      type format_ = :csv | :json

      module Format
        extend Telnyx::Internal::Type::Enum

        CSV: :csv
        JSON: :json

        def self?.values: -> ::Array[Telnyx::Models::UsageReportListParams::format_]
      end

      type page = { number: Integer, size: Integer }

      class Page < Telnyx::Internal::Type::BaseModel
        attr_reader number: Integer?

        def number=: (Integer) -> Integer

        attr_reader size: Integer?

        def size=: (Integer) -> Integer

        def initialize: (?number: Integer, ?size: Integer) -> void

        def to_hash: -> { number: Integer, size: Integer }
      end
    end
  end
end
