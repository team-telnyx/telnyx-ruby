module Telnyx
  module Models
    type oauth_client_create_params =
      {
        allowed_grant_types: ::Array[Telnyx::Models::OAuthClientCreateParams::allowed_grant_type],
        allowed_scopes: ::Array[String],
        client_type: Telnyx::Models::OAuthClientCreateParams::client_type,
        name: String,
        logo_uri: String,
        policy_uri: String,
        redirect_uris: ::Array[String],
        require_pkce: bool,
        tos_uri: String
      }
      & Telnyx::Internal::Type::request_parameters

    class OAuthClientCreateParams < Telnyx::Internal::Type::BaseModel
      extend Telnyx::Internal::Type::RequestParameters::Converter
      include Telnyx::Internal::Type::RequestParameters

      attr_accessor allowed_grant_types: ::Array[Telnyx::Models::OAuthClientCreateParams::allowed_grant_type]

      attr_accessor allowed_scopes: ::Array[String]

      attr_accessor client_type: Telnyx::Models::OAuthClientCreateParams::client_type

      attr_accessor name: String

      attr_reader logo_uri: String?

      def logo_uri=: (String) -> String

      attr_reader policy_uri: String?

      def policy_uri=: (String) -> String

      attr_reader redirect_uris: ::Array[String]?

      def redirect_uris=: (::Array[String]) -> ::Array[String]

      attr_reader require_pkce: bool?

      def require_pkce=: (bool) -> bool

      attr_reader tos_uri: String?

      def tos_uri=: (String) -> String

      def initialize: (
        allowed_grant_types: ::Array[Telnyx::Models::OAuthClientCreateParams::allowed_grant_type],
        allowed_scopes: ::Array[String],
        client_type: Telnyx::Models::OAuthClientCreateParams::client_type,
        name: String,
        ?logo_uri: String,
        ?policy_uri: String,
        ?redirect_uris: ::Array[String],
        ?require_pkce: bool,
        ?tos_uri: String,
        ?request_options: Telnyx::request_opts
      ) -> void

      def to_hash: -> {
        allowed_grant_types: ::Array[Telnyx::Models::OAuthClientCreateParams::allowed_grant_type],
        allowed_scopes: ::Array[String],
        client_type: Telnyx::Models::OAuthClientCreateParams::client_type,
        name: String,
        logo_uri: String,
        policy_uri: String,
        redirect_uris: ::Array[String],
        require_pkce: bool,
        tos_uri: String,
        request_options: Telnyx::RequestOptions
      }

      type allowed_grant_type =
        :client_credentials | :authorization_code | :refresh_token

      module AllowedGrantType
        extend Telnyx::Internal::Type::Enum

        CLIENT_CREDENTIALS: :client_credentials
        AUTHORIZATION_CODE: :authorization_code
        REFRESH_TOKEN: :refresh_token

        def self?.values: -> ::Array[Telnyx::Models::OAuthClientCreateParams::allowed_grant_type]
      end

      type client_type = :public | :confidential

      module ClientType
        extend Telnyx::Internal::Type::Enum

        PUBLIC: :public
        CONFIDENTIAL: :confidential

        def self?.values: -> ::Array[Telnyx::Models::OAuthClientCreateParams::client_type]
      end
    end
  end
end
