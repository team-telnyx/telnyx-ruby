module Telnyx
  module Models
    module Calls
      type action_reject_params =
        {
          cause: Telnyx::Models::Calls::ActionRejectParams::cause,
          client_state: String,
          command_id: String
        }
        & Telnyx::Internal::Type::request_parameters

      class ActionRejectParams < Telnyx::Internal::Type::BaseModel
        extend Telnyx::Internal::Type::RequestParameters::Converter
        include Telnyx::Internal::Type::RequestParameters

        attr_accessor cause: Telnyx::Models::Calls::ActionRejectParams::cause

        attr_reader client_state: String?

        def client_state=: (String) -> String

        attr_reader command_id: String?

        def command_id=: (String) -> String

        def initialize: (
          cause: Telnyx::Models::Calls::ActionRejectParams::cause,
          ?client_state: String,
          ?command_id: String,
          ?request_options: Telnyx::request_opts
        ) -> void

        def to_hash: -> {
          cause: Telnyx::Models::Calls::ActionRejectParams::cause,
          client_state: String,
          command_id: String,
          request_options: Telnyx::RequestOptions
        }

        type cause = :CALL_REJECTED | :USER_BUSY

        module Cause
          extend Telnyx::Internal::Type::Enum

          CALL_REJECTED: :CALL_REJECTED
          USER_BUSY: :USER_BUSY

          def self?.values: -> ::Array[Telnyx::Models::Calls::ActionRejectParams::cause]
        end
      end
    end
  end
end
