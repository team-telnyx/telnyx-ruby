module Telnyx
  module Models
    module Texml
      module Accounts
        module Conferences
          type participant_update_params =
            {
              account_sid: String,
              conference_sid: String,
              announce_method: Telnyx::Models::Texml::Accounts::Conferences::ParticipantUpdateParams::announce_method,
              announce_url: String,
              beep_on_exit: bool,
              call_sid_to_coach: String,
              coaching: bool,
              end_conference_on_exit: bool,
              hold: bool,
              hold_method: Telnyx::Models::Texml::Accounts::Conferences::ParticipantUpdateParams::hold_method,
              hold_url: String,
              muted: bool,
              wait_url: String
            }
            & Telnyx::Internal::Type::request_parameters

          class ParticipantUpdateParams < Telnyx::Internal::Type::BaseModel
            extend Telnyx::Internal::Type::RequestParameters::Converter
            include Telnyx::Internal::Type::RequestParameters

            attr_accessor account_sid: String

            attr_accessor conference_sid: String

            attr_reader announce_method: Telnyx::Models::Texml::Accounts::Conferences::ParticipantUpdateParams::announce_method?

            def announce_method=: (
              Telnyx::Models::Texml::Accounts::Conferences::ParticipantUpdateParams::announce_method
            ) -> Telnyx::Models::Texml::Accounts::Conferences::ParticipantUpdateParams::announce_method

            attr_reader announce_url: String?

            def announce_url=: (String) -> String

            attr_reader beep_on_exit: bool?

            def beep_on_exit=: (bool) -> bool

            attr_reader call_sid_to_coach: String?

            def call_sid_to_coach=: (String) -> String

            attr_reader coaching: bool?

            def coaching=: (bool) -> bool

            attr_reader end_conference_on_exit: bool?

            def end_conference_on_exit=: (bool) -> bool

            attr_reader hold: bool?

            def hold=: (bool) -> bool

            attr_reader hold_method: Telnyx::Models::Texml::Accounts::Conferences::ParticipantUpdateParams::hold_method?

            def hold_method=: (
              Telnyx::Models::Texml::Accounts::Conferences::ParticipantUpdateParams::hold_method
            ) -> Telnyx::Models::Texml::Accounts::Conferences::ParticipantUpdateParams::hold_method

            attr_reader hold_url: String?

            def hold_url=: (String) -> String

            attr_reader muted: bool?

            def muted=: (bool) -> bool

            attr_reader wait_url: String?

            def wait_url=: (String) -> String

            def initialize: (
              account_sid: String,
              conference_sid: String,
              ?announce_method: Telnyx::Models::Texml::Accounts::Conferences::ParticipantUpdateParams::announce_method,
              ?announce_url: String,
              ?beep_on_exit: bool,
              ?call_sid_to_coach: String,
              ?coaching: bool,
              ?end_conference_on_exit: bool,
              ?hold: bool,
              ?hold_method: Telnyx::Models::Texml::Accounts::Conferences::ParticipantUpdateParams::hold_method,
              ?hold_url: String,
              ?muted: bool,
              ?wait_url: String,
              ?request_options: Telnyx::request_opts
            ) -> void

            def to_hash: -> {
              account_sid: String,
              conference_sid: String,
              announce_method: Telnyx::Models::Texml::Accounts::Conferences::ParticipantUpdateParams::announce_method,
              announce_url: String,
              beep_on_exit: bool,
              call_sid_to_coach: String,
              coaching: bool,
              end_conference_on_exit: bool,
              hold: bool,
              hold_method: Telnyx::Models::Texml::Accounts::Conferences::ParticipantUpdateParams::hold_method,
              hold_url: String,
              muted: bool,
              wait_url: String,
              request_options: Telnyx::RequestOptions
            }

            type announce_method = :GET | :POST

            module AnnounceMethod
              extend Telnyx::Internal::Type::Enum

              GET: :GET
              POST: :POST

              def self?.values: -> ::Array[Telnyx::Models::Texml::Accounts::Conferences::ParticipantUpdateParams::announce_method]
            end

            type hold_method = :GET | :POST

            module HoldMethod
              extend Telnyx::Internal::Type::Enum

              GET: :GET
              POST: :POST

              def self?.values: -> ::Array[Telnyx::Models::Texml::Accounts::Conferences::ParticipantUpdateParams::hold_method]
            end
          end
        end
      end
    end
  end
end
