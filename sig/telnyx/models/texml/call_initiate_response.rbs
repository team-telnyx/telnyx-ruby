module Telnyx
  module Models
    module Texml
      type call_initiate_response =
        { data: Telnyx::Models::Texml::CallInitiateResponse::Data }

      class CallInitiateResponse < Telnyx::Internal::Type::BaseModel
        attr_reader data: Telnyx::Models::Texml::CallInitiateResponse::Data?

        def data=: (
          Telnyx::Models::Texml::CallInitiateResponse::Data
        ) -> Telnyx::Models::Texml::CallInitiateResponse::Data

        def initialize: (
          ?data: Telnyx::Models::Texml::CallInitiateResponse::Data
        ) -> void

        def to_hash: -> {
          data: Telnyx::Models::Texml::CallInitiateResponse::Data
        }

        type data = { from: String, status: String, to: String }

        class Data < Telnyx::Internal::Type::BaseModel
          attr_reader from: String?

          def from=: (String) -> String

          attr_reader status: String?

          def status=: (String) -> String

          attr_reader to: String?

          def to=: (String) -> String

          def initialize: (?from: String, ?status: String, ?to: String) -> void

          def to_hash: -> { from: String, status: String, to: String }
        end
      end
    end
  end
end
