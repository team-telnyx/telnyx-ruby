module Telnyx
  module Models
    module Texml
      type call_update_response =
        { data: Telnyx::Models::Texml::CallUpdateResponse::Data }

      class CallUpdateResponse < Telnyx::Internal::Type::BaseModel
        attr_reader data: Telnyx::Models::Texml::CallUpdateResponse::Data?

        def data=: (
          Telnyx::Models::Texml::CallUpdateResponse::Data
        ) -> Telnyx::Models::Texml::CallUpdateResponse::Data

        def initialize: (
          ?data: Telnyx::Models::Texml::CallUpdateResponse::Data
        ) -> void

        def to_hash: -> {
          data: Telnyx::Models::Texml::CallUpdateResponse::Data
        }

        type data = { sid: String, status: String }

        class Data < Telnyx::Internal::Type::BaseModel
          attr_reader sid: String?

          def sid=: (String) -> String

          attr_reader status: String?

          def status=: (String) -> String

          def initialize: (?sid: String, ?status: String) -> void

          def to_hash: -> { sid: String, status: String }
        end
      end
    end
  end
end
