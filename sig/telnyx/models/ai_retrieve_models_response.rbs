module Telnyx
  module Models
    type ai_retrieve_models_response =
      {
        data: ::Array[Telnyx::Models::AIRetrieveModelsResponse::Data],
        object: String
      }

    class AIRetrieveModelsResponse < Telnyx::Internal::Type::BaseModel
      attr_accessor data: ::Array[Telnyx::Models::AIRetrieveModelsResponse::Data]

      attr_reader object: String?

      def object=: (String) -> String

      def initialize: (
        data: ::Array[Telnyx::Models::AIRetrieveModelsResponse::Data],
        ?object: String
      ) -> void

      def to_hash: -> {
        data: ::Array[Telnyx::Models::AIRetrieveModelsResponse::Data],
        object: String
      }

      type data =
        { id: String, created: Integer, owned_by: String, object: String }

      class Data < Telnyx::Internal::Type::BaseModel
        attr_accessor id: String

        attr_accessor created: Integer

        attr_accessor owned_by: String

        attr_reader object: String?

        def object=: (String) -> String

        def initialize: (
          id: String,
          created: Integer,
          owned_by: String,
          ?object: String
        ) -> void

        def to_hash: -> {
          id: String,
          created: Integer,
          owned_by: String,
          object: String
        }
      end
    end
  end
end
