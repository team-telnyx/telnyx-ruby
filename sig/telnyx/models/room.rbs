module Telnyx
  module Models
    type room =
      {
        id: String,
        active_session_id: String,
        created_at: Time,
        enable_recording: bool,
        max_participants: Integer,
        record_type: String,
        sessions: ::Array[Telnyx::RoomSession],
        unique_name: String,
        updated_at: Time,
        webhook_event_failover_url: String?,
        webhook_event_url: String,
        webhook_timeout_secs: Integer?
      }

    class Room < Telnyx::Internal::Type::BaseModel
      attr_reader id: String?

      def id=: (String) -> String

      attr_reader active_session_id: String?

      def active_session_id=: (String) -> String

      attr_reader created_at: Time?

      def created_at=: (Time) -> Time

      attr_reader enable_recording: bool?

      def enable_recording=: (bool) -> bool

      attr_reader max_participants: Integer?

      def max_participants=: (Integer) -> Integer

      attr_reader sessions: ::Array[Telnyx::RoomSession]?

      def sessions=: (
        ::Array[Telnyx::RoomSession]
      ) -> ::Array[Telnyx::RoomSession]

      attr_reader unique_name: String?

      def unique_name=: (String) -> String

      attr_reader updated_at: Time?

      def updated_at=: (Time) -> Time

      attr_accessor webhook_event_failover_url: String?

      attr_reader webhook_event_url: String?

      def webhook_event_url=: (String) -> String

      attr_accessor webhook_timeout_secs: Integer?

      attr_reader record_type: String?

      def record_type=: (String) -> String

      def initialize: (
        ?id: String,
        ?active_session_id: String,
        ?created_at: Time,
        ?enable_recording: bool,
        ?max_participants: Integer,
        ?record_type: String,
        ?sessions: ::Array[Telnyx::RoomSession],
        ?unique_name: String,
        ?updated_at: Time,
        ?webhook_event_failover_url: String?,
        ?webhook_event_url: String,
        ?webhook_timeout_secs: Integer?
      ) -> void

      def to_hash: -> {
        id: String,
        active_session_id: String,
        created_at: Time,
        enable_recording: bool,
        max_participants: Integer,
        record_type: String,
        sessions: ::Array[Telnyx::RoomSession],
        unique_name: String,
        updated_at: Time,
        webhook_event_failover_url: String?,
        webhook_event_url: String,
        webhook_timeout_secs: Integer?
      }
    end
  end
end
