module Telnyx
  module Models
    module Legacy
      module Reporting
        module BatchDetailRecords
          type voice_create_params =
            {
              end_time: Time,
              start_time: Time,
              call_types: ::Array[Integer],
              connections: ::Array[Integer],
              fields: ::Array[String],
              filters: ::Array[Telnyx::Legacy::Reporting::Filter],
              include_all_metadata: bool,
              managed_accounts: ::Array[String],
              record_types: ::Array[Integer],
              report_name: String,
              select_all_managed_accounts: bool,
              source: String,
              timezone: String
            }
            & Telnyx::Internal::Type::request_parameters

          class VoiceCreateParams < Telnyx::Internal::Type::BaseModel
            extend Telnyx::Internal::Type::RequestParameters::Converter
            include Telnyx::Internal::Type::RequestParameters

            attr_accessor end_time: Time

            attr_accessor start_time: Time

            attr_reader call_types: ::Array[Integer]?

            def call_types=: (::Array[Integer]) -> ::Array[Integer]

            attr_reader connections: ::Array[Integer]?

            def connections=: (::Array[Integer]) -> ::Array[Integer]

            attr_reader fields: ::Array[String]?

            def fields=: (::Array[String]) -> ::Array[String]

            attr_reader filters: ::Array[Telnyx::Legacy::Reporting::Filter]?

            def filters=: (
              ::Array[Telnyx::Legacy::Reporting::Filter]
            ) -> ::Array[Telnyx::Legacy::Reporting::Filter]

            attr_reader include_all_metadata: bool?

            def include_all_metadata=: (bool) -> bool

            attr_reader managed_accounts: ::Array[String]?

            def managed_accounts=: (::Array[String]) -> ::Array[String]

            attr_reader record_types: ::Array[Integer]?

            def record_types=: (::Array[Integer]) -> ::Array[Integer]

            attr_reader report_name: String?

            def report_name=: (String) -> String

            attr_reader select_all_managed_accounts: bool?

            def select_all_managed_accounts=: (bool) -> bool

            attr_reader source: String?

            def source=: (String) -> String

            attr_reader timezone: String?

            def timezone=: (String) -> String

            def initialize: (
              end_time: Time,
              start_time: Time,
              ?call_types: ::Array[Integer],
              ?connections: ::Array[Integer],
              ?fields: ::Array[String],
              ?filters: ::Array[Telnyx::Legacy::Reporting::Filter],
              ?include_all_metadata: bool,
              ?managed_accounts: ::Array[String],
              ?record_types: ::Array[Integer],
              ?report_name: String,
              ?select_all_managed_accounts: bool,
              ?source: String,
              ?timezone: String,
              ?request_options: Telnyx::request_opts
            ) -> void

            def to_hash: -> {
              end_time: Time,
              start_time: Time,
              call_types: ::Array[Integer],
              connections: ::Array[Integer],
              fields: ::Array[String],
              filters: ::Array[Telnyx::Legacy::Reporting::Filter],
              include_all_metadata: bool,
              managed_accounts: ::Array[String],
              record_types: ::Array[Integer],
              report_name: String,
              select_all_managed_accounts: bool,
              source: String,
              timezone: String,
              request_options: Telnyx::RequestOptions
            }
          end
        end
      end
    end
  end
end
