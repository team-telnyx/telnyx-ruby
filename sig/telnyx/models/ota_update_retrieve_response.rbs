module Telnyx
  module Models
    type ota_update_retrieve_response =
      { data: Telnyx::Models::OtaUpdateRetrieveResponse::Data }

    class OtaUpdateRetrieveResponse < Telnyx::Internal::Type::BaseModel
      attr_reader data: Telnyx::Models::OtaUpdateRetrieveResponse::Data?

      def data=: (
        Telnyx::Models::OtaUpdateRetrieveResponse::Data
      ) -> Telnyx::Models::OtaUpdateRetrieveResponse::Data

      def initialize: (
        ?data: Telnyx::Models::OtaUpdateRetrieveResponse::Data
      ) -> void

      def to_hash: -> { data: Telnyx::Models::OtaUpdateRetrieveResponse::Data }

      type data =
        {
          id: String,
          created_at: String,
          record_type: String,
          settings: Telnyx::Models::OtaUpdateRetrieveResponse::Data::Settings,
          sim_card_id: String,
          status: Telnyx::Models::OtaUpdateRetrieveResponse::Data::status,
          type: Telnyx::Models::OtaUpdateRetrieveResponse::Data::type_,
          updated_at: String
        }

      class Data < Telnyx::Internal::Type::BaseModel
        attr_reader settings: Telnyx::Models::OtaUpdateRetrieveResponse::Data::Settings?

        def settings=: (
          Telnyx::Models::OtaUpdateRetrieveResponse::Data::Settings
        ) -> Telnyx::Models::OtaUpdateRetrieveResponse::Data::Settings

        attr_reader sim_card_id: String?

        def sim_card_id=: (String) -> String

        attr_reader status: Telnyx::Models::OtaUpdateRetrieveResponse::Data::status?

        def status=: (
          Telnyx::Models::OtaUpdateRetrieveResponse::Data::status
        ) -> Telnyx::Models::OtaUpdateRetrieveResponse::Data::status

        attr_reader type: Telnyx::Models::OtaUpdateRetrieveResponse::Data::type_?

        def type=: (
          Telnyx::Models::OtaUpdateRetrieveResponse::Data::type_
        ) -> Telnyx::Models::OtaUpdateRetrieveResponse::Data::type_

        attr_reader id: String?

        def id=: (String) -> String

        attr_reader created_at: String?

        def created_at=: (String) -> String

        attr_reader record_type: String?

        def record_type=: (String) -> String

        attr_reader updated_at: String?

        def updated_at=: (String) -> String

        def initialize: (
          ?id: String,
          ?created_at: String,
          ?record_type: String,
          ?settings: Telnyx::Models::OtaUpdateRetrieveResponse::Data::Settings,
          ?sim_card_id: String,
          ?status: Telnyx::Models::OtaUpdateRetrieveResponse::Data::status,
          ?type: Telnyx::Models::OtaUpdateRetrieveResponse::Data::type_,
          ?updated_at: String
        ) -> void

        def to_hash: -> {
          id: String,
          created_at: String,
          record_type: String,
          settings: Telnyx::Models::OtaUpdateRetrieveResponse::Data::Settings,
          sim_card_id: String,
          status: Telnyx::Models::OtaUpdateRetrieveResponse::Data::status,
          type: Telnyx::Models::OtaUpdateRetrieveResponse::Data::type_,
          updated_at: String
        }

        type settings =
          {
            mobile_network_operators_preferences: ::Array[Telnyx::Models::OtaUpdateRetrieveResponse::Data::Settings::MobileNetworkOperatorsPreference]
          }

        class Settings < Telnyx::Internal::Type::BaseModel
          attr_reader mobile_network_operators_preferences: ::Array[Telnyx::Models::OtaUpdateRetrieveResponse::Data::Settings::MobileNetworkOperatorsPreference]?

          def mobile_network_operators_preferences=: (
            ::Array[Telnyx::Models::OtaUpdateRetrieveResponse::Data::Settings::MobileNetworkOperatorsPreference]
          ) -> ::Array[Telnyx::Models::OtaUpdateRetrieveResponse::Data::Settings::MobileNetworkOperatorsPreference]

          def initialize: (
            ?mobile_network_operators_preferences: ::Array[Telnyx::Models::OtaUpdateRetrieveResponse::Data::Settings::MobileNetworkOperatorsPreference]
          ) -> void

          def to_hash: -> {
            mobile_network_operators_preferences: ::Array[Telnyx::Models::OtaUpdateRetrieveResponse::Data::Settings::MobileNetworkOperatorsPreference]
          }

          type mobile_network_operators_preference =
            {
              mobile_network_operator_id: String,
              mobile_network_operator_name: String,
              priority: Integer
            }

          class MobileNetworkOperatorsPreference < Telnyx::Internal::Type::BaseModel
            attr_reader mobile_network_operator_id: String?

            def mobile_network_operator_id=: (String) -> String

            attr_reader mobile_network_operator_name: String?

            def mobile_network_operator_name=: (String) -> String

            attr_reader priority: Integer?

            def priority=: (Integer) -> Integer

            def initialize: (
              ?mobile_network_operator_id: String,
              ?mobile_network_operator_name: String,
              ?priority: Integer
            ) -> void

            def to_hash: -> {
              mobile_network_operator_id: String,
              mobile_network_operator_name: String,
              priority: Integer
            }
          end
        end

        type status = :"in-progress" | :completed | :failed

        module Status
          extend Telnyx::Internal::Type::Enum

          IN_PROGRESS: :"in-progress"
          COMPLETED: :completed
          FAILED: :failed

          def self?.values: -> ::Array[Telnyx::Models::OtaUpdateRetrieveResponse::Data::status]
        end

        type type_ = :sim_card_network_preferences

        module Type
          extend Telnyx::Internal::Type::Enum

          SIM_CARD_NETWORK_PREFERENCES: :sim_card_network_preferences

          def self?.values: -> ::Array[Telnyx::Models::OtaUpdateRetrieveResponse::Data::type_]
        end
      end
    end
  end
end
