module Telnyx
  module Models
    module Actions
      type register_create_params =
        {
          registration_codes: ::Array[String],
          sim_card_group_id: String,
          status: Telnyx::Models::Actions::RegisterCreateParams::status,
          tags: ::Array[String]
        }
        & Telnyx::Internal::Type::request_parameters

      class RegisterCreateParams < Telnyx::Internal::Type::BaseModel
        extend Telnyx::Internal::Type::RequestParameters::Converter
        include Telnyx::Internal::Type::RequestParameters

        attr_accessor registration_codes: ::Array[String]

        attr_reader sim_card_group_id: String?

        def sim_card_group_id=: (String) -> String

        attr_reader status: Telnyx::Models::Actions::RegisterCreateParams::status?

        def status=: (
          Telnyx::Models::Actions::RegisterCreateParams::status
        ) -> Telnyx::Models::Actions::RegisterCreateParams::status

        attr_reader tags: ::Array[String]?

        def tags=: (::Array[String]) -> ::Array[String]

        def initialize: (
          registration_codes: ::Array[String],
          ?sim_card_group_id: String,
          ?status: Telnyx::Models::Actions::RegisterCreateParams::status,
          ?tags: ::Array[String],
          ?request_options: Telnyx::request_opts
        ) -> void

        def to_hash: -> {
          registration_codes: ::Array[String],
          sim_card_group_id: String,
          status: Telnyx::Models::Actions::RegisterCreateParams::status,
          tags: ::Array[String],
          request_options: Telnyx::RequestOptions
        }

        type status = :enabled | :disabled | :standby

        module Status
          extend Telnyx::Internal::Type::Enum

          ENABLED: :enabled
          DISABLED: :disabled
          STANDBY: :standby

          def self?.values: -> ::Array[Telnyx::Models::Actions::RegisterCreateParams::status]
        end
      end
    end
  end
end
