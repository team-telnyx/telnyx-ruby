module Telnyx
  module Models
    type inbound_channel_list_response =
      { data: Telnyx::Models::InboundChannelListResponse::Data }

    class InboundChannelListResponse < Telnyx::Internal::Type::BaseModel
      attr_reader data: Telnyx::Models::InboundChannelListResponse::Data?

      def data=: (
        Telnyx::Models::InboundChannelListResponse::Data
      ) -> Telnyx::Models::InboundChannelListResponse::Data

      def initialize: (
        ?data: Telnyx::Models::InboundChannelListResponse::Data
      ) -> void

      def to_hash: -> { data: Telnyx::Models::InboundChannelListResponse::Data }

      type data = { channels: Integer, record_type: String }

      class Data < Telnyx::Internal::Type::BaseModel
        attr_reader channels: Integer?

        def channels=: (Integer) -> Integer

        attr_reader record_type: String?

        def record_type=: (String) -> String

        def initialize: (?channels: Integer, ?record_type: String) -> void

        def to_hash: -> { channels: Integer, record_type: String }
      end
    end
  end
end
