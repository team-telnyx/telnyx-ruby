module Telnyx
  module Models
    module Queues
      type call_list_params =
        { page: Telnyx::Queues::CallListParams::Page }
        & Telnyx::Internal::Type::request_parameters

      class CallListParams < Telnyx::Internal::Type::BaseModel
        extend Telnyx::Internal::Type::RequestParameters::Converter
        include Telnyx::Internal::Type::RequestParameters

        attr_reader page: Telnyx::Queues::CallListParams::Page?

        def page=: (
          Telnyx::Queues::CallListParams::Page
        ) -> Telnyx::Queues::CallListParams::Page

        def initialize: (
          ?page: Telnyx::Queues::CallListParams::Page,
          ?request_options: Telnyx::request_opts
        ) -> void

        def to_hash: -> {
          page: Telnyx::Queues::CallListParams::Page,
          request_options: Telnyx::RequestOptions
        }

        type page =
          {
            after: String,
            before: String,
            limit: Integer,
            number: Integer,
            size: Integer
          }

        class Page < Telnyx::Internal::Type::BaseModel
          attr_reader after: String?

          def after=: (String) -> String

          attr_reader before: String?

          def before=: (String) -> String

          attr_reader limit: Integer?

          def limit=: (Integer) -> Integer

          attr_reader number: Integer?

          def number=: (Integer) -> Integer

          attr_reader size: Integer?

          def size=: (Integer) -> Integer

          def initialize: (
            ?after: String,
            ?before: String,
            ?limit: Integer,
            ?number: Integer,
            ?size: Integer
          ) -> void

          def to_hash: -> {
            after: String,
            before: String,
            limit: Integer,
            number: Integer,
            size: Integer
          }
        end
      end
    end
  end
end
