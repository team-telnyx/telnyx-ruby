module Telnyx
  module Models
    type room_participant =
      {
        id: String,
        context: String,
        joined_at: Time,
        left_at: Time,
        record_type: String,
        session_id: String,
        updated_at: Time
      }

    class RoomParticipant < Telnyx::Internal::Type::BaseModel
      attr_reader id: String?

      def id=: (String) -> String

      attr_reader context: String?

      def context=: (String) -> String

      attr_reader joined_at: Time?

      def joined_at=: (Time) -> Time

      attr_reader left_at: Time?

      def left_at=: (Time) -> Time

      attr_reader session_id: String?

      def session_id=: (String) -> String

      attr_reader updated_at: Time?

      def updated_at=: (Time) -> Time

      attr_reader record_type: String?

      def record_type=: (String) -> String

      def initialize: (
        ?id: String,
        ?context: String,
        ?joined_at: Time,
        ?left_at: Time,
        ?record_type: String,
        ?session_id: String,
        ?updated_at: Time
      ) -> void

      def to_hash: -> {
        id: String,
        context: String,
        joined_at: Time,
        left_at: Time,
        record_type: String,
        session_id: String,
        updated_at: Time
      }
    end
  end
end
