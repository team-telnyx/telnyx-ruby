module Telnyx
  module Models
    module PortingOrders
      type comment_list_response =
        {
          data: ::Array[Telnyx::Models::PortingOrders::CommentListResponse::Data],
          meta: Telnyx::PaginationMeta
        }

      class CommentListResponse < Telnyx::Internal::Type::BaseModel
        attr_reader data: ::Array[Telnyx::Models::PortingOrders::CommentListResponse::Data]?

        def data=: (
          ::Array[Telnyx::Models::PortingOrders::CommentListResponse::Data]
        ) -> ::Array[Telnyx::Models::PortingOrders::CommentListResponse::Data]

        attr_reader meta: Telnyx::PaginationMeta?

        def meta=: (Telnyx::PaginationMeta) -> Telnyx::PaginationMeta

        def initialize: (
          ?data: ::Array[Telnyx::Models::PortingOrders::CommentListResponse::Data],
          ?meta: Telnyx::PaginationMeta
        ) -> void

        def to_hash: -> {
          data: ::Array[Telnyx::Models::PortingOrders::CommentListResponse::Data],
          meta: Telnyx::PaginationMeta
        }

        type data =
          {
            id: String,
            body: String,
            created_at: Time,
            porting_order_id: String,
            record_type: String,
            user_type: Telnyx::Models::PortingOrders::CommentListResponse::Data::user_type
          }

        class Data < Telnyx::Internal::Type::BaseModel
          attr_reader id: String?

          def id=: (String) -> String

          attr_reader body: String?

          def body=: (String) -> String

          attr_reader created_at: Time?

          def created_at=: (Time) -> Time

          attr_reader porting_order_id: String?

          def porting_order_id=: (String) -> String

          attr_reader record_type: String?

          def record_type=: (String) -> String

          attr_reader user_type: Telnyx::Models::PortingOrders::CommentListResponse::Data::user_type?

          def user_type=: (
            Telnyx::Models::PortingOrders::CommentListResponse::Data::user_type
          ) -> Telnyx::Models::PortingOrders::CommentListResponse::Data::user_type

          def initialize: (
            ?id: String,
            ?body: String,
            ?created_at: Time,
            ?porting_order_id: String,
            ?record_type: String,
            ?user_type: Telnyx::Models::PortingOrders::CommentListResponse::Data::user_type
          ) -> void

          def to_hash: -> {
            id: String,
            body: String,
            created_at: Time,
            porting_order_id: String,
            record_type: String,
            user_type: Telnyx::Models::PortingOrders::CommentListResponse::Data::user_type
          }

          type user_type = :admin | :user | :system

          module UserType
            extend Telnyx::Internal::Type::Enum

            ADMIN: :admin
            USER: :user
            SYSTEM: :system

            def self?.values: -> ::Array[Telnyx::Models::PortingOrders::CommentListResponse::Data::user_type]
          end
        end
      end
    end
  end
end
