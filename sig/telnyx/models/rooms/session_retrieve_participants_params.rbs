module Telnyx
  module Models
    module Rooms
      type session_retrieve_participants_params =
        {
          filter: Telnyx::Rooms::SessionRetrieveParticipantsParams::Filter,
          page: Telnyx::Rooms::SessionRetrieveParticipantsParams::Page
        }
        & Telnyx::Internal::Type::request_parameters

      class SessionRetrieveParticipantsParams < Telnyx::Internal::Type::BaseModel
        extend Telnyx::Internal::Type::RequestParameters::Converter
        include Telnyx::Internal::Type::RequestParameters

        attr_reader filter: Telnyx::Rooms::SessionRetrieveParticipantsParams::Filter?

        def filter=: (
          Telnyx::Rooms::SessionRetrieveParticipantsParams::Filter
        ) -> Telnyx::Rooms::SessionRetrieveParticipantsParams::Filter

        attr_reader page: Telnyx::Rooms::SessionRetrieveParticipantsParams::Page?

        def page=: (
          Telnyx::Rooms::SessionRetrieveParticipantsParams::Page
        ) -> Telnyx::Rooms::SessionRetrieveParticipantsParams::Page

        def initialize: (
          ?filter: Telnyx::Rooms::SessionRetrieveParticipantsParams::Filter,
          ?page: Telnyx::Rooms::SessionRetrieveParticipantsParams::Page,
          ?request_options: Telnyx::request_opts
        ) -> void

        def to_hash: -> {
          filter: Telnyx::Rooms::SessionRetrieveParticipantsParams::Filter,
          page: Telnyx::Rooms::SessionRetrieveParticipantsParams::Page,
          request_options: Telnyx::RequestOptions
        }

        type filter =
          {
            context: String,
            date_joined_at: Telnyx::Rooms::SessionRetrieveParticipantsParams::Filter::DateJoinedAt,
            date_left_at: Telnyx::Rooms::SessionRetrieveParticipantsParams::Filter::DateLeftAt,
            date_updated_at: Telnyx::Rooms::SessionRetrieveParticipantsParams::Filter::DateUpdatedAt
          }

        class Filter < Telnyx::Internal::Type::BaseModel
          attr_reader context: String?

          def context=: (String) -> String

          attr_reader date_joined_at: Telnyx::Rooms::SessionRetrieveParticipantsParams::Filter::DateJoinedAt?

          def date_joined_at=: (
            Telnyx::Rooms::SessionRetrieveParticipantsParams::Filter::DateJoinedAt
          ) -> Telnyx::Rooms::SessionRetrieveParticipantsParams::Filter::DateJoinedAt

          attr_reader date_left_at: Telnyx::Rooms::SessionRetrieveParticipantsParams::Filter::DateLeftAt?

          def date_left_at=: (
            Telnyx::Rooms::SessionRetrieveParticipantsParams::Filter::DateLeftAt
          ) -> Telnyx::Rooms::SessionRetrieveParticipantsParams::Filter::DateLeftAt

          attr_reader date_updated_at: Telnyx::Rooms::SessionRetrieveParticipantsParams::Filter::DateUpdatedAt?

          def date_updated_at=: (
            Telnyx::Rooms::SessionRetrieveParticipantsParams::Filter::DateUpdatedAt
          ) -> Telnyx::Rooms::SessionRetrieveParticipantsParams::Filter::DateUpdatedAt

          def initialize: (
            ?context: String,
            ?date_joined_at: Telnyx::Rooms::SessionRetrieveParticipantsParams::Filter::DateJoinedAt,
            ?date_left_at: Telnyx::Rooms::SessionRetrieveParticipantsParams::Filter::DateLeftAt,
            ?date_updated_at: Telnyx::Rooms::SessionRetrieveParticipantsParams::Filter::DateUpdatedAt
          ) -> void

          def to_hash: -> {
            context: String,
            date_joined_at: Telnyx::Rooms::SessionRetrieveParticipantsParams::Filter::DateJoinedAt,
            date_left_at: Telnyx::Rooms::SessionRetrieveParticipantsParams::Filter::DateLeftAt,
            date_updated_at: Telnyx::Rooms::SessionRetrieveParticipantsParams::Filter::DateUpdatedAt
          }

          type date_joined_at = { eq: Date, gte: Date, lte: Date }

          class DateJoinedAt < Telnyx::Internal::Type::BaseModel
            attr_reader eq: Date?

            def eq=: (Date) -> Date

            attr_reader gte: Date?

            def gte=: (Date) -> Date

            attr_reader lte: Date?

            def lte=: (Date) -> Date

            def initialize: (?eq: Date, ?gte: Date, ?lte: Date) -> void

            def to_hash: -> { eq: Date, gte: Date, lte: Date }
          end

          type date_left_at = { eq: Date, gte: Date, lte: Date }

          class DateLeftAt < Telnyx::Internal::Type::BaseModel
            attr_reader eq: Date?

            def eq=: (Date) -> Date

            attr_reader gte: Date?

            def gte=: (Date) -> Date

            attr_reader lte: Date?

            def lte=: (Date) -> Date

            def initialize: (?eq: Date, ?gte: Date, ?lte: Date) -> void

            def to_hash: -> { eq: Date, gte: Date, lte: Date }
          end

          type date_updated_at = { eq: Date, gte: Date, lte: Date }

          class DateUpdatedAt < Telnyx::Internal::Type::BaseModel
            attr_reader eq: Date?

            def eq=: (Date) -> Date

            attr_reader gte: Date?

            def gte=: (Date) -> Date

            attr_reader lte: Date?

            def lte=: (Date) -> Date

            def initialize: (?eq: Date, ?gte: Date, ?lte: Date) -> void

            def to_hash: -> { eq: Date, gte: Date, lte: Date }
          end
        end

        type page = { number: Integer, size: Integer }

        class Page < Telnyx::Internal::Type::BaseModel
          attr_reader number: Integer?

          def number=: (Integer) -> Integer

          attr_reader size: Integer?

          def size=: (Integer) -> Integer

          def initialize: (?number: Integer, ?size: Integer) -> void

          def to_hash: -> { number: Integer, size: Integer }
        end
      end
    end
  end
end
