module Telnyx
  module Models
    module Rooms
      type action_refresh_client_token_response =
        { data: Telnyx::Models::Rooms::ActionRefreshClientTokenResponse::Data }

      class ActionRefreshClientTokenResponse < Telnyx::Internal::Type::BaseModel
        attr_reader data: Telnyx::Models::Rooms::ActionRefreshClientTokenResponse::Data?

        def data=: (
          Telnyx::Models::Rooms::ActionRefreshClientTokenResponse::Data
        ) -> Telnyx::Models::Rooms::ActionRefreshClientTokenResponse::Data

        def initialize: (
          ?data: Telnyx::Models::Rooms::ActionRefreshClientTokenResponse::Data
        ) -> void

        def to_hash: -> {
          data: Telnyx::Models::Rooms::ActionRefreshClientTokenResponse::Data
        }

        type data = { token: String, token_expires_at: Time }

        class Data < Telnyx::Internal::Type::BaseModel
          attr_reader token: String?

          def token=: (String) -> String

          attr_reader token_expires_at: Time?

          def token_expires_at=: (Time) -> Time

          def initialize: (?token: String, ?token_expires_at: Time) -> void

          def to_hash: -> { token: String, token_expires_at: Time }
        end
      end
    end
  end
end
