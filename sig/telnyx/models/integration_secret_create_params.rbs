module Telnyx
  module Models
    type integration_secret_create_params =
      {
        identifier: String,
        type: Telnyx::Models::IntegrationSecretCreateParams::type_,
        token: String,
        password: String,
        username: String
      }
      & Telnyx::Internal::Type::request_parameters

    class IntegrationSecretCreateParams < Telnyx::Internal::Type::BaseModel
      extend Telnyx::Internal::Type::RequestParameters::Converter
      include Telnyx::Internal::Type::RequestParameters

      attr_accessor identifier: String

      attr_accessor type: Telnyx::Models::IntegrationSecretCreateParams::type_

      attr_reader token: String?

      def token=: (String) -> String

      attr_reader password: String?

      def password=: (String) -> String

      attr_reader username: String?

      def username=: (String) -> String

      def initialize: (
        identifier: String,
        type: Telnyx::Models::IntegrationSecretCreateParams::type_,
        ?token: String,
        ?password: String,
        ?username: String,
        ?request_options: Telnyx::request_opts
      ) -> void

      def to_hash: -> {
        identifier: String,
        type: Telnyx::Models::IntegrationSecretCreateParams::type_,
        token: String,
        password: String,
        username: String,
        request_options: Telnyx::RequestOptions
      }

      type type_ = :bearer | :basic

      module Type
        extend Telnyx::Internal::Type::Enum

        BEARER: :bearer
        BASIC: :basic

        def self?.values: -> ::Array[Telnyx::Models::IntegrationSecretCreateParams::type_]
      end
    end
  end
end
