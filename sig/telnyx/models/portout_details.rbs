module Telnyx
  module Models
    type portout_details =
      {
        id: String,
        already_ported: bool,
        authorized_name: String,
        carrier_name: String,
        city: String,
        created_at: String,
        current_carrier: String,
        end_user_name: String,
        foc_date: String,
        host_messaging: bool,
        inserted_at: String,
        lsr: ::Array[String],
        phone_numbers: ::Array[String],
        pon: String,
        reason: String,
        record_type: String,
        rejection_code: Integer,
        requested_foc_date: String,
        service_address: String,
        spid: String,
        state: String,
        status: Telnyx::Models::PortoutDetails::status,
        support_key: String,
        updated_at: String,
        user_id: String,
        vendor: String,
        zip: String
      }

    class PortoutDetails < Telnyx::Internal::Type::BaseModel
      attr_reader id: String?

      def id=: (String) -> String

      attr_reader already_ported: bool?

      def already_ported=: (bool) -> bool

      attr_reader authorized_name: String?

      def authorized_name=: (String) -> String

      attr_reader carrier_name: String?

      def carrier_name=: (String) -> String

      attr_reader city: String?

      def city=: (String) -> String

      attr_reader created_at: String?

      def created_at=: (String) -> String

      attr_reader current_carrier: String?

      def current_carrier=: (String) -> String

      attr_reader end_user_name: String?

      def end_user_name=: (String) -> String

      attr_reader foc_date: String?

      def foc_date=: (String) -> String

      attr_reader host_messaging: bool?

      def host_messaging=: (bool) -> bool

      attr_reader inserted_at: String?

      def inserted_at=: (String) -> String

      attr_reader lsr: ::Array[String]?

      def lsr=: (::Array[String]) -> ::Array[String]

      attr_reader phone_numbers: ::Array[String]?

      def phone_numbers=: (::Array[String]) -> ::Array[String]

      attr_reader pon: String?

      def pon=: (String) -> String

      attr_reader reason: String?

      def reason=: (String) -> String

      attr_reader rejection_code: Integer?

      def rejection_code=: (Integer) -> Integer

      attr_reader requested_foc_date: String?

      def requested_foc_date=: (String) -> String

      attr_reader service_address: String?

      def service_address=: (String) -> String

      attr_reader spid: String?

      def spid=: (String) -> String

      attr_reader state: String?

      def state=: (String) -> String

      attr_reader status: Telnyx::Models::PortoutDetails::status?

      def status=: (
        Telnyx::Models::PortoutDetails::status
      ) -> Telnyx::Models::PortoutDetails::status

      attr_reader support_key: String?

      def support_key=: (String) -> String

      attr_reader updated_at: String?

      def updated_at=: (String) -> String

      attr_reader user_id: String?

      def user_id=: (String) -> String

      attr_reader vendor: String?

      def vendor=: (String) -> String

      attr_reader zip: String?

      def zip=: (String) -> String

      attr_reader record_type: String?

      def record_type=: (String) -> String

      def initialize: (
        ?id: String,
        ?already_ported: bool,
        ?authorized_name: String,
        ?carrier_name: String,
        ?city: String,
        ?created_at: String,
        ?current_carrier: String,
        ?end_user_name: String,
        ?foc_date: String,
        ?host_messaging: bool,
        ?inserted_at: String,
        ?lsr: ::Array[String],
        ?phone_numbers: ::Array[String],
        ?pon: String,
        ?reason: String,
        ?record_type: String,
        ?rejection_code: Integer,
        ?requested_foc_date: String,
        ?service_address: String,
        ?spid: String,
        ?state: String,
        ?status: Telnyx::Models::PortoutDetails::status,
        ?support_key: String,
        ?updated_at: String,
        ?user_id: String,
        ?vendor: String,
        ?zip: String
      ) -> void

      def to_hash: -> {
        id: String,
        already_ported: bool,
        authorized_name: String,
        carrier_name: String,
        city: String,
        created_at: String,
        current_carrier: String,
        end_user_name: String,
        foc_date: String,
        host_messaging: bool,
        inserted_at: String,
        lsr: ::Array[String],
        phone_numbers: ::Array[String],
        pon: String,
        reason: String,
        record_type: String,
        rejection_code: Integer,
        requested_foc_date: String,
        service_address: String,
        spid: String,
        state: String,
        status: Telnyx::Models::PortoutDetails::status,
        support_key: String,
        updated_at: String,
        user_id: String,
        vendor: String,
        zip: String
      }

      type status =
        :pending
        | :authorized
        | :ported
        | :rejected
        | :"rejected-pending"
        | :canceled

      module Status
        extend Telnyx::Internal::Type::Enum

        PENDING: :pending
        AUTHORIZED: :authorized
        PORTED: :ported
        REJECTED: :rejected
        REJECTED_PENDING: :"rejected-pending"
        CANCELED: :canceled

        def self?.values: -> ::Array[Telnyx::Models::PortoutDetails::status]
      end
    end
  end
end
