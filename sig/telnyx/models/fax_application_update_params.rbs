module Telnyx
  module Models
    type fax_application_update_params =
      {
        application_name: String,
        webhook_event_url: String,
        active: bool,
        anchorsite_override: Telnyx::Models::anchorsite_override,
        fax_email_recipient: String?,
        inbound: Telnyx::FaxApplicationUpdateParams::Inbound,
        outbound: Telnyx::FaxApplicationUpdateParams::Outbound,
        tags: ::Array[String],
        webhook_event_failover_url: String?,
        webhook_timeout_secs: Integer?
      }
      & Telnyx::Internal::Type::request_parameters

    class FaxApplicationUpdateParams < Telnyx::Internal::Type::BaseModel
      extend Telnyx::Internal::Type::RequestParameters::Converter
      include Telnyx::Internal::Type::RequestParameters

      attr_accessor application_name: String

      attr_accessor webhook_event_url: String

      attr_reader active: bool?

      def active=: (bool) -> bool

      attr_reader anchorsite_override: Telnyx::Models::anchorsite_override?

      def anchorsite_override=: (
        Telnyx::Models::anchorsite_override
      ) -> Telnyx::Models::anchorsite_override

      attr_accessor fax_email_recipient: String?

      attr_reader inbound: Telnyx::FaxApplicationUpdateParams::Inbound?

      def inbound=: (
        Telnyx::FaxApplicationUpdateParams::Inbound
      ) -> Telnyx::FaxApplicationUpdateParams::Inbound

      attr_reader outbound: Telnyx::FaxApplicationUpdateParams::Outbound?

      def outbound=: (
        Telnyx::FaxApplicationUpdateParams::Outbound
      ) -> Telnyx::FaxApplicationUpdateParams::Outbound

      attr_reader tags: ::Array[String]?

      def tags=: (::Array[String]) -> ::Array[String]

      attr_accessor webhook_event_failover_url: String?

      attr_accessor webhook_timeout_secs: Integer?

      def initialize: (
        application_name: String,
        webhook_event_url: String,
        ?active: bool,
        ?anchorsite_override: Telnyx::Models::anchorsite_override,
        ?fax_email_recipient: String?,
        ?inbound: Telnyx::FaxApplicationUpdateParams::Inbound,
        ?outbound: Telnyx::FaxApplicationUpdateParams::Outbound,
        ?tags: ::Array[String],
        ?webhook_event_failover_url: String?,
        ?webhook_timeout_secs: Integer?,
        ?request_options: Telnyx::request_opts
      ) -> void

      def to_hash: -> {
        application_name: String,
        webhook_event_url: String,
        active: bool,
        anchorsite_override: Telnyx::Models::anchorsite_override,
        fax_email_recipient: String?,
        inbound: Telnyx::FaxApplicationUpdateParams::Inbound,
        outbound: Telnyx::FaxApplicationUpdateParams::Outbound,
        tags: ::Array[String],
        webhook_event_failover_url: String?,
        webhook_timeout_secs: Integer?,
        request_options: Telnyx::RequestOptions
      }

      type inbound =
        {
          channel_limit: Integer,
          sip_subdomain: String,
          sip_subdomain_receive_settings: Telnyx::Models::FaxApplicationUpdateParams::Inbound::sip_subdomain_receive_settings
        }

      class Inbound < Telnyx::Internal::Type::BaseModel
        attr_reader channel_limit: Integer?

        def channel_limit=: (Integer) -> Integer

        attr_reader sip_subdomain: String?

        def sip_subdomain=: (String) -> String

        attr_reader sip_subdomain_receive_settings: Telnyx::Models::FaxApplicationUpdateParams::Inbound::sip_subdomain_receive_settings?

        def sip_subdomain_receive_settings=: (
          Telnyx::Models::FaxApplicationUpdateParams::Inbound::sip_subdomain_receive_settings
        ) -> Telnyx::Models::FaxApplicationUpdateParams::Inbound::sip_subdomain_receive_settings

        def initialize: (
          ?channel_limit: Integer,
          ?sip_subdomain: String,
          ?sip_subdomain_receive_settings: Telnyx::Models::FaxApplicationUpdateParams::Inbound::sip_subdomain_receive_settings
        ) -> void

        def to_hash: -> {
          channel_limit: Integer,
          sip_subdomain: String,
          sip_subdomain_receive_settings: Telnyx::Models::FaxApplicationUpdateParams::Inbound::sip_subdomain_receive_settings
        }

        type sip_subdomain_receive_settings =
          :only_my_connections | :from_anyone

        module SipSubdomainReceiveSettings
          extend Telnyx::Internal::Type::Enum

          ONLY_MY_CONNECTIONS: :only_my_connections
          FROM_ANYONE: :from_anyone

          def self?.values: -> ::Array[Telnyx::Models::FaxApplicationUpdateParams::Inbound::sip_subdomain_receive_settings]
        end
      end

      type outbound =
        { channel_limit: Integer, outbound_voice_profile_id: String }

      class Outbound < Telnyx::Internal::Type::BaseModel
        attr_reader channel_limit: Integer?

        def channel_limit=: (Integer) -> Integer

        attr_reader outbound_voice_profile_id: String?

        def outbound_voice_profile_id=: (String) -> String

        def initialize: (
          ?channel_limit: Integer,
          ?outbound_voice_profile_id: String
        ) -> void

        def to_hash: -> {
          channel_limit: Integer,
          outbound_voice_profile_id: String
        }
      end
    end
  end
end
