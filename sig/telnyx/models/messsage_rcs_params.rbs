module Telnyx
  module Models
    type messsage_rcs_params =
      {
        agent_id: String,
        agent_message: Telnyx::RcsAgentMessage,
        messaging_profile_id: String,
        to: String,
        mms_fallback: Telnyx::MesssageRcsParams::MmsFallback,
        sms_fallback: Telnyx::MesssageRcsParams::SMSFallback,
        type: Telnyx::Models::MesssageRcsParams::type_,
        webhook_url: String
      }
      & Telnyx::Internal::Type::request_parameters

    class MesssageRcsParams < Telnyx::Internal::Type::BaseModel
      extend Telnyx::Internal::Type::RequestParameters::Converter
      include Telnyx::Internal::Type::RequestParameters

      attr_accessor agent_id: String

      attr_accessor agent_message: Telnyx::RcsAgentMessage

      attr_accessor messaging_profile_id: String

      attr_accessor to: String

      attr_reader mms_fallback: Telnyx::MesssageRcsParams::MmsFallback?

      def mms_fallback=: (
        Telnyx::MesssageRcsParams::MmsFallback
      ) -> Telnyx::MesssageRcsParams::MmsFallback

      attr_reader sms_fallback: Telnyx::MesssageRcsParams::SMSFallback?

      def sms_fallback=: (
        Telnyx::MesssageRcsParams::SMSFallback
      ) -> Telnyx::MesssageRcsParams::SMSFallback

      attr_reader type: Telnyx::Models::MesssageRcsParams::type_?

      def type=: (
        Telnyx::Models::MesssageRcsParams::type_
      ) -> Telnyx::Models::MesssageRcsParams::type_

      attr_reader webhook_url: String?

      def webhook_url=: (String) -> String

      def initialize: (
        agent_id: String,
        agent_message: Telnyx::RcsAgentMessage,
        messaging_profile_id: String,
        to: String,
        ?mms_fallback: Telnyx::MesssageRcsParams::MmsFallback,
        ?sms_fallback: Telnyx::MesssageRcsParams::SMSFallback,
        ?type: Telnyx::Models::MesssageRcsParams::type_,
        ?webhook_url: String,
        ?request_options: Telnyx::request_opts
      ) -> void

      def to_hash: -> {
        agent_id: String,
        agent_message: Telnyx::RcsAgentMessage,
        messaging_profile_id: String,
        to: String,
        mms_fallback: Telnyx::MesssageRcsParams::MmsFallback,
        sms_fallback: Telnyx::MesssageRcsParams::SMSFallback,
        type: Telnyx::Models::MesssageRcsParams::type_,
        webhook_url: String,
        request_options: Telnyx::RequestOptions
      }

      type mms_fallback =
        {
          from: String,
          media_urls: ::Array[String],
          subject: String,
          text: String
        }

      class MmsFallback < Telnyx::Internal::Type::BaseModel
        attr_reader from: String?

        def from=: (String) -> String

        attr_reader media_urls: ::Array[String]?

        def media_urls=: (::Array[String]) -> ::Array[String]

        attr_reader subject: String?

        def subject=: (String) -> String

        attr_reader text: String?

        def text=: (String) -> String

        def initialize: (
          ?from: String,
          ?media_urls: ::Array[String],
          ?subject: String,
          ?text: String
        ) -> void

        def to_hash: -> {
          from: String,
          media_urls: ::Array[String],
          subject: String,
          text: String
        }
      end

      type sms_fallback = { from: String, text: String }

      class SMSFallback < Telnyx::Internal::Type::BaseModel
        attr_reader from: String?

        def from=: (String) -> String

        attr_reader text: String?

        def text=: (String) -> String

        def initialize: (?from: String, ?text: String) -> void

        def to_hash: -> { from: String, text: String }
      end

      type type_ = :RCS

      module Type
        extend Telnyx::Internal::Type::Enum

        RCS: :RCS

        def self?.values: -> ::Array[Telnyx::Models::MesssageRcsParams::type_]
      end
    end
  end
end
