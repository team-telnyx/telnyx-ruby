module Telnyx
  module Models
    type invoice_list_params =
      {
        page: Telnyx::InvoiceListParams::Page,
        sort: Telnyx::Models::InvoiceListParams::sort
      }
      & Telnyx::Internal::Type::request_parameters

    class InvoiceListParams < Telnyx::Internal::Type::BaseModel
      extend Telnyx::Internal::Type::RequestParameters::Converter
      include Telnyx::Internal::Type::RequestParameters

      attr_reader page: Telnyx::InvoiceListParams::Page?

      def page=: (
        Telnyx::InvoiceListParams::Page
      ) -> Telnyx::InvoiceListParams::Page

      attr_reader sort: Telnyx::Models::InvoiceListParams::sort?

      def sort=: (
        Telnyx::Models::InvoiceListParams::sort
      ) -> Telnyx::Models::InvoiceListParams::sort

      def initialize: (
        ?page: Telnyx::InvoiceListParams::Page,
        ?sort: Telnyx::Models::InvoiceListParams::sort,
        ?request_options: Telnyx::request_opts
      ) -> void

      def to_hash: -> {
        page: Telnyx::InvoiceListParams::Page,
        sort: Telnyx::Models::InvoiceListParams::sort,
        request_options: Telnyx::RequestOptions
      }

      type page = { number: Integer, size: Integer }

      class Page < Telnyx::Internal::Type::BaseModel
        attr_reader number: Integer?

        def number=: (Integer) -> Integer

        attr_reader size: Integer?

        def size=: (Integer) -> Integer

        def initialize: (?number: Integer, ?size: Integer) -> void

        def to_hash: -> { number: Integer, size: Integer }
      end

      type sort = :period_start | :"-period_start"

      module Sort
        extend Telnyx::Internal::Type::Enum

        PERIOD_START: :period_start
        PERIOD_START_DESC: :"-period_start"

        def self?.values: -> ::Array[Telnyx::Models::InvoiceListParams::sort]
      end
    end
  end
end
