module Telnyx
  module Models
    type sim_card_get_device_details_response =
      { data: Telnyx::Models::SimCardGetDeviceDetailsResponse::Data }

    class SimCardGetDeviceDetailsResponse < Telnyx::Internal::Type::BaseModel
      attr_reader data: Telnyx::Models::SimCardGetDeviceDetailsResponse::Data?

      def data=: (
        Telnyx::Models::SimCardGetDeviceDetailsResponse::Data
      ) -> Telnyx::Models::SimCardGetDeviceDetailsResponse::Data

      def initialize: (
        ?data: Telnyx::Models::SimCardGetDeviceDetailsResponse::Data
      ) -> void

      def to_hash: -> {
        data: Telnyx::Models::SimCardGetDeviceDetailsResponse::Data
      }

      type data =
        {
          brand_name: String,
          device_type: String,
          imei: String,
          model_name: String,
          operating_system: String,
          record_type: String
        }

      class Data < Telnyx::Internal::Type::BaseModel
        attr_reader brand_name: String?

        def brand_name=: (String) -> String

        attr_reader device_type: String?

        def device_type=: (String) -> String

        attr_reader imei: String?

        def imei=: (String) -> String

        attr_reader model_name: String?

        def model_name=: (String) -> String

        attr_reader operating_system: String?

        def operating_system=: (String) -> String

        attr_reader record_type: String?

        def record_type=: (String) -> String

        def initialize: (
          ?brand_name: String,
          ?device_type: String,
          ?imei: String,
          ?model_name: String,
          ?operating_system: String,
          ?record_type: String
        ) -> void

        def to_hash: -> {
          brand_name: String,
          device_type: String,
          imei: String,
          model_name: String,
          operating_system: String,
          record_type: String
        }
      end
    end
  end
end
