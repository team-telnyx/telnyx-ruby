module Telnyx
  module Models
    type campaign_builder_create_params =
      {
        brand_id: String,
        description: String,
        usecase: String,
        age_gated: bool,
        auto_renewal: bool,
        direct_lending: bool,
        embedded_link: bool,
        embedded_link_sample: String,
        embedded_phone: bool,
        help_keywords: String,
        help_message: String,
        message_flow: String,
        mno_ids: ::Array[Integer],
        number_pool: bool,
        optin_keywords: String,
        optin_message: String,
        optout_keywords: String,
        optout_message: String,
        privacy_policy_link: String,
        reference_id: String,
        reseller_id: String,
        :sample1 => String,
        :sample2 => String,
        :sample3 => String,
        :sample4 => String,
        :sample5 => String,
        subscriber_help: bool,
        subscriber_optin: bool,
        subscriber_optout: bool,
        sub_usecases: ::Array[String],
        tag: ::Array[String],
        terms_and_conditions: bool,
        terms_and_conditions_link: String,
        webhook_failover_url: String,
        webhook_url: String
      }
      & Telnyx::Internal::Type::request_parameters

    class CampaignBuilderCreateParams < Telnyx::Internal::Type::BaseModel
      extend Telnyx::Internal::Type::RequestParameters::Converter
      include Telnyx::Internal::Type::RequestParameters

      attr_accessor brand_id: String

      attr_accessor description: String

      attr_accessor usecase: String

      attr_reader age_gated: bool?

      def age_gated=: (bool) -> bool

      attr_reader auto_renewal: bool?

      def auto_renewal=: (bool) -> bool

      attr_reader direct_lending: bool?

      def direct_lending=: (bool) -> bool

      attr_reader embedded_link: bool?

      def embedded_link=: (bool) -> bool

      attr_reader embedded_link_sample: String?

      def embedded_link_sample=: (String) -> String

      attr_reader embedded_phone: bool?

      def embedded_phone=: (bool) -> bool

      attr_reader help_keywords: String?

      def help_keywords=: (String) -> String

      attr_reader help_message: String?

      def help_message=: (String) -> String

      attr_reader message_flow: String?

      def message_flow=: (String) -> String

      attr_reader mno_ids: ::Array[Integer]?

      def mno_ids=: (::Array[Integer]) -> ::Array[Integer]

      attr_reader number_pool: bool?

      def number_pool=: (bool) -> bool

      attr_reader optin_keywords: String?

      def optin_keywords=: (String) -> String

      attr_reader optin_message: String?

      def optin_message=: (String) -> String

      attr_reader optout_keywords: String?

      def optout_keywords=: (String) -> String

      attr_reader optout_message: String?

      def optout_message=: (String) -> String

      attr_reader privacy_policy_link: String?

      def privacy_policy_link=: (String) -> String

      attr_reader reference_id: String?

      def reference_id=: (String) -> String

      attr_reader reseller_id: String?

      def reseller_id=: (String) -> String

      attr_reader sample1: String?

      def sample1=: (String) -> String

      attr_reader sample2: String?

      def sample2=: (String) -> String

      attr_reader sample3: String?

      def sample3=: (String) -> String

      attr_reader sample4: String?

      def sample4=: (String) -> String

      attr_reader sample5: String?

      def sample5=: (String) -> String

      attr_reader subscriber_help: bool?

      def subscriber_help=: (bool) -> bool

      attr_reader subscriber_optin: bool?

      def subscriber_optin=: (bool) -> bool

      attr_reader subscriber_optout: bool?

      def subscriber_optout=: (bool) -> bool

      attr_reader sub_usecases: ::Array[String]?

      def sub_usecases=: (::Array[String]) -> ::Array[String]

      attr_reader tag: ::Array[String]?

      def tag=: (::Array[String]) -> ::Array[String]

      attr_reader terms_and_conditions: bool?

      def terms_and_conditions=: (bool) -> bool

      attr_reader terms_and_conditions_link: String?

      def terms_and_conditions_link=: (String) -> String

      attr_reader webhook_failover_url: String?

      def webhook_failover_url=: (String) -> String

      attr_reader webhook_url: String?

      def webhook_url=: (String) -> String

      def initialize: (
        brand_id: String,
        description: String,
        usecase: String,
        ?age_gated: bool,
        ?auto_renewal: bool,
        ?direct_lending: bool,
        ?embedded_link: bool,
        ?embedded_link_sample: String,
        ?embedded_phone: bool,
        ?help_keywords: String,
        ?help_message: String,
        ?message_flow: String,
        ?mno_ids: ::Array[Integer],
        ?number_pool: bool,
        ?optin_keywords: String,
        ?optin_message: String,
        ?optout_keywords: String,
        ?optout_message: String,
        ?privacy_policy_link: String,
        ?reference_id: String,
        ?reseller_id: String,
        ?sample1: String,
        ?sample2: String,
        ?sample3: String,
        ?sample4: String,
        ?sample5: String,
        ?subscriber_help: bool,
        ?subscriber_optin: bool,
        ?subscriber_optout: bool,
        ?sub_usecases: ::Array[String],
        ?tag: ::Array[String],
        ?terms_and_conditions: bool,
        ?terms_and_conditions_link: String,
        ?webhook_failover_url: String,
        ?webhook_url: String,
        ?request_options: Telnyx::request_opts
      ) -> void

      def to_hash: -> {
        brand_id: String,
        description: String,
        usecase: String,
        age_gated: bool,
        auto_renewal: bool,
        direct_lending: bool,
        embedded_link: bool,
        embedded_link_sample: String,
        embedded_phone: bool,
        help_keywords: String,
        help_message: String,
        message_flow: String,
        mno_ids: ::Array[Integer],
        number_pool: bool,
        optin_keywords: String,
        optin_message: String,
        optout_keywords: String,
        optout_message: String,
        privacy_policy_link: String,
        reference_id: String,
        reseller_id: String,
        :sample1 => String,
        :sample2 => String,
        :sample3 => String,
        :sample4 => String,
        :sample5 => String,
        subscriber_help: bool,
        subscriber_optin: bool,
        subscriber_optout: bool,
        sub_usecases: ::Array[String],
        tag: ::Array[String],
        terms_and_conditions: bool,
        terms_and_conditions_link: String,
        webhook_failover_url: String,
        webhook_url: String,
        request_options: Telnyx::RequestOptions
      }
    end
  end
end
