module Telnyx
  module Models
    type wireguard_interface_retrieve_response =
      { data: Telnyx::Models::WireguardInterfaceRetrieveResponse::Data }

    class WireguardInterfaceRetrieveResponse < Telnyx::Internal::Type::BaseModel
      attr_reader data: Telnyx::Models::WireguardInterfaceRetrieveResponse::Data?

      def data=: (
        Telnyx::Models::WireguardInterfaceRetrieveResponse::Data
      ) -> Telnyx::Models::WireguardInterfaceRetrieveResponse::Data

      def initialize: (
        ?data: Telnyx::Models::WireguardInterfaceRetrieveResponse::Data
      ) -> void

      def to_hash: -> {
        data: Telnyx::Models::WireguardInterfaceRetrieveResponse::Data
      }

      type data =
        {
          id: String,
          created_at: String,
          record_type: String,
          updated_at: String,
          name: String,
          network_id: String,
          status: Telnyx::Models::interface_status,
          enable_sip_trunking: bool,
          endpoint: String,
          public_key: String,
          region: Telnyx::Models::WireguardInterfaceRetrieveResponse::Data::Region,
          region_code: String
        }

      class Data < Telnyx::Internal::Type::BaseModel
        attr_reader name: String?

        def name=: (String) -> String

        attr_reader network_id: String?

        def network_id=: (String) -> String

        attr_reader enable_sip_trunking: bool?

        def enable_sip_trunking=: (bool) -> bool

        attr_reader region: Telnyx::Models::WireguardInterfaceRetrieveResponse::Data::Region?

        def region=: (
          Telnyx::Models::WireguardInterfaceRetrieveResponse::Data::Region
        ) -> Telnyx::Models::WireguardInterfaceRetrieveResponse::Data::Region

        attr_reader region_code: String?

        def region_code=: (String) -> String

        attr_reader id: String?

        def id=: (String) -> String

        attr_reader created_at: String?

        def created_at=: (String) -> String

        attr_reader record_type: String?

        def record_type=: (String) -> String

        attr_reader updated_at: String?

        def updated_at=: (String) -> String

        attr_reader status: Telnyx::Models::interface_status?

        def status=: (
          Telnyx::Models::interface_status
        ) -> Telnyx::Models::interface_status

        attr_reader endpoint: String?

        def endpoint=: (String) -> String

        attr_reader public_key: String?

        def public_key=: (String) -> String

        def initialize: (
          ?id: String,
          ?created_at: String,
          ?record_type: String,
          ?updated_at: String,
          ?name: String,
          ?network_id: String,
          ?status: Telnyx::Models::interface_status,
          ?enable_sip_trunking: bool,
          ?endpoint: String,
          ?public_key: String,
          ?region: Telnyx::Models::WireguardInterfaceRetrieveResponse::Data::Region,
          ?region_code: String
        ) -> void

        def to_hash: -> {
          id: String,
          created_at: String,
          record_type: String,
          updated_at: String,
          name: String,
          network_id: String,
          status: Telnyx::Models::interface_status,
          enable_sip_trunking: bool,
          endpoint: String,
          public_key: String,
          region: Telnyx::Models::WireguardInterfaceRetrieveResponse::Data::Region,
          region_code: String
        }

        type region = { code: String, name: String, record_type: String }

        class Region < Telnyx::Internal::Type::BaseModel
          attr_reader code: String?

          def code=: (String) -> String

          attr_reader name: String?

          def name=: (String) -> String

          attr_reader record_type: String?

          def record_type=: (String) -> String

          def initialize: (
            ?code: String,
            ?name: String,
            ?record_type: String
          ) -> void

          def to_hash: -> { code: String, name: String, record_type: String }
        end
      end
    end
  end
end
