module Telnyx
  module Resources
    class FqdnConnections
      def create: (
        connection_name: String,
        ?active: bool,
        ?anchorsite_override: Telnyx::Models::anchorsite_override,
        ?android_push_credential_id: String?,
        ?default_on_hold_comfort_noise_enabled: bool,
        ?dtmf_type: Telnyx::Models::dtmf_type,
        ?encode_contact_header_enabled: bool,
        ?encrypted_media: Telnyx::Models::encrypted_media?,
        ?inbound: Telnyx::InboundFqdn,
        ?ios_push_credential_id: String?,
        ?microsoft_teams_sbc: bool,
        ?onnet_t38_passthrough_enabled: bool,
        ?outbound: Telnyx::OutboundFqdn,
        ?rtcp_settings: Telnyx::ConnectionRtcpSettings,
        ?tags: ::Array[String],
        ?transport_protocol: Telnyx::Models::transport_protocol,
        ?webhook_api_version: Telnyx::Models::webhook_api_version,
        ?webhook_event_failover_url: String?,
        ?webhook_event_url: String,
        ?webhook_timeout_secs: Integer?,
        ?request_options: Telnyx::request_opts
      ) -> Telnyx::Models::FqdnConnectionCreateResponse

      def retrieve: (
        String id,
        ?request_options: Telnyx::request_opts
      ) -> Telnyx::Models::FqdnConnectionRetrieveResponse

      def update: (
        String id,
        ?active: bool,
        ?anchorsite_override: Telnyx::Models::anchorsite_override,
        ?android_push_credential_id: String?,
        ?connection_name: String,
        ?default_on_hold_comfort_noise_enabled: bool,
        ?dtmf_type: Telnyx::Models::dtmf_type,
        ?encode_contact_header_enabled: bool,
        ?encrypted_media: Telnyx::Models::encrypted_media?,
        ?inbound: Telnyx::InboundFqdn,
        ?ios_push_credential_id: String?,
        ?onnet_t38_passthrough_enabled: bool,
        ?outbound: Telnyx::OutboundFqdn,
        ?rtcp_settings: Telnyx::ConnectionRtcpSettings,
        ?tags: ::Array[String],
        ?transport_protocol: Telnyx::Models::transport_protocol,
        ?webhook_api_version: Telnyx::Models::webhook_api_version,
        ?webhook_event_failover_url: String?,
        ?webhook_event_url: String,
        ?webhook_timeout_secs: Integer?,
        ?request_options: Telnyx::request_opts
      ) -> Telnyx::Models::FqdnConnectionUpdateResponse

      def list: (
        ?filter: Telnyx::FqdnConnectionListParams::Filter,
        ?page: Telnyx::FqdnConnectionListParams::Page,
        ?sort: Telnyx::Models::FqdnConnectionListParams::sort,
        ?request_options: Telnyx::request_opts
      ) -> Telnyx::Models::FqdnConnectionListResponse

      def delete: (
        String id,
        ?request_options: Telnyx::request_opts
      ) -> Telnyx::Models::FqdnConnectionDeleteResponse

      def initialize: (client: Telnyx::Client) -> void
    end
  end
end
